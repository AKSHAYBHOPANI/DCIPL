{"ast":null,"code":"\"use strict\";\n\nvar crypto = require('crypto');\n\nclass PaytmChecksum {\n  static encrypt(input, key) {\n    var cipher = crypto.createCipheriv('AES-128-CBC', key, PaytmChecksum.iv);\n    var encrypted = cipher.update(input, 'binary', 'base64');\n    encrypted += cipher.final('base64');\n    return encrypted;\n  }\n\n  static decrypt(encrypted, key) {\n    var decipher = crypto.createDecipheriv('AES-128-CBC', key, PaytmChecksum.iv);\n    var decrypted = decipher.update(encrypted, 'base64', 'binary');\n\n    try {\n      decrypted += decipher.final('binary');\n    } catch (e) {\n      console.log(e);\n    }\n\n    return decrypted;\n  }\n\n  static generateSignature(params, key) {\n    if (typeof params !== \"object\" && typeof params !== \"string\") {\n      var error = \"string or object expected, \" + typeof params + \" given.\";\n      return Promise.reject(error);\n    }\n\n    if (typeof params !== \"string\") {\n      params = PaytmChecksum.getStringByParams(params);\n    }\n\n    return PaytmChecksum.generateSignatureByString(params, key);\n  }\n\n  static verifySignature(params, key, checksum) {\n    if (typeof params !== \"object\" && typeof params !== \"string\") {\n      var error = \"string or object expected, \" + typeof params + \" given.\";\n      return Promise.reject(error);\n    }\n\n    if (params.hasOwnProperty(\"CHECKSUMHASH\")) {\n      delete params.CHECKSUMHASH;\n    }\n\n    if (typeof params !== \"string\") {\n      params = PaytmChecksum.getStringByParams(params);\n    }\n\n    return PaytmChecksum.verifySignatureByString(params, key, checksum);\n  }\n\n  static async generateSignatureByString(params, key) {\n    var salt = await PaytmChecksum.generateRandomString(4);\n    return PaytmChecksum.calculateChecksum(params, key, salt);\n  }\n\n  static verifySignatureByString(params, key, checksum) {\n    var paytm_hash = PaytmChecksum.decrypt(checksum, key);\n    var salt = paytm_hash.substr(paytm_hash.length - 4);\n    return paytm_hash === PaytmChecksum.calculateHash(params, salt);\n  }\n\n  static generateRandomString(length) {\n    return new Promise(function (resolve, reject) {\n      crypto.randomBytes(length * 3.0 / 4.0, function (err, buf) {\n        if (!err) {\n          var salt = buf.toString(\"base64\");\n          resolve(salt);\n        } else {\n          console.log(\"error occurred in generateRandomString: \" + err);\n          reject(err);\n        }\n      });\n    });\n  }\n\n  static getStringByParams(params) {\n    var data = {};\n    Object.keys(params).sort().forEach(function (key, value) {\n      data[key] = params[key] !== null && params[key].toLowerCase() !== \"null\" ? params[key] : \"\";\n    });\n    return Object.values(data).join('|');\n  }\n\n  static calculateHash(params, salt) {\n    var finalString = params + \"|\" + salt;\n    return crypto.createHash('sha256').update(finalString).digest('hex') + salt;\n  }\n\n  static calculateChecksum(params, key, salt) {\n    var hashString = PaytmChecksum.calculateHash(params, salt);\n    return PaytmChecksum.encrypt(hashString, key);\n  }\n\n}\n\nPaytmChecksum.iv = '@@@@&&&&####$$$$';\nmodule.exports = PaytmChecksum;","map":{"version":3,"sources":["/Users/akshaybhopani/GitHub/DCIPL/node_modules/paytmchecksum/PaytmChecksum.js"],"names":["crypto","require","PaytmChecksum","encrypt","input","key","cipher","createCipheriv","iv","encrypted","update","final","decrypt","decipher","createDecipheriv","decrypted","e","console","log","generateSignature","params","error","Promise","reject","getStringByParams","generateSignatureByString","verifySignature","checksum","hasOwnProperty","CHECKSUMHASH","verifySignatureByString","salt","generateRandomString","calculateChecksum","paytm_hash","substr","length","calculateHash","resolve","randomBytes","err","buf","toString","data","Object","keys","sort","forEach","value","toLowerCase","values","join","finalString","createHash","digest","hashString","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar crypto = require('crypto');\n\nclass PaytmChecksum {\n\n\tstatic encrypt(input, key) {\n\t\tvar cipher = crypto.createCipheriv('AES-128-CBC', key, PaytmChecksum.iv);\n\t\tvar encrypted = cipher.update(input, 'binary', 'base64');\n\t\tencrypted += cipher.final('base64');\n\t\treturn encrypted;\n\t}\n\tstatic decrypt(encrypted, key) {\n\t\tvar decipher = crypto.createDecipheriv('AES-128-CBC', key, PaytmChecksum.iv);\n\t\tvar decrypted = decipher.update(encrypted, 'base64', 'binary');\n\t\ttry {\n\t\t\tdecrypted += decipher.final('binary');\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t\treturn decrypted;\n\t}\n\tstatic generateSignature(params, key) {\n\t\tif (typeof params !== \"object\" && typeof params !== \"string\") {\n\t\t\tvar error = \"string or object expected, \" + (typeof params) + \" given.\";\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t\tif (typeof params !== \"string\"){\n\t\t\tparams = PaytmChecksum.getStringByParams(params);\n\t\t}\n\t\treturn PaytmChecksum.generateSignatureByString(params, key);\n\t}\n\t\n\n\tstatic verifySignature(params, key, checksum) {\n\t\tif (typeof params !== \"object\" && typeof params !== \"string\") {\n\t\t   \tvar error = \"string or object expected, \" + (typeof params) + \" given.\";\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t\tif(params.hasOwnProperty(\"CHECKSUMHASH\")){\n\t\t\tdelete params.CHECKSUMHASH\n\t\t}\n\t\tif (typeof params !== \"string\"){\n\t\t\tparams = PaytmChecksum.getStringByParams(params);\n\t\t}\n\t\treturn PaytmChecksum.verifySignatureByString(params, key, checksum);\n\t}\n\n\tstatic async generateSignatureByString(params, key) {\n\t\tvar salt = await PaytmChecksum.generateRandomString(4);\n\t\treturn PaytmChecksum.calculateChecksum(params, key, salt);\n\t}\n\n\tstatic verifySignatureByString(params, key, checksum) {\t\t\n\t\tvar paytm_hash = PaytmChecksum.decrypt(checksum, key);\n\t\tvar salt = paytm_hash.substr(paytm_hash.length - 4);\n\t\treturn (paytm_hash === PaytmChecksum.calculateHash(params, salt));\n\t}\n\n\tstatic generateRandomString(length) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tcrypto.randomBytes((length * 3.0) / 4.0, function (err, buf) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tvar salt = buf.toString(\"base64\");\n\t\t\t\t\tresolve(salt);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"error occurred in generateRandomString: \" + err);\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic getStringByParams(params) {\n\t\tvar data = {};\n\t\tObject.keys(params).sort().forEach(function(key,value) {\n\t\t\tdata[key] = (params[key] !== null && params[key].toLowerCase() !== \"null\") ? params[key] : \"\";\n\t\t});\n\t\treturn Object.values(data).join('|');\n\t}\n\n\tstatic calculateHash(params, salt) {\t\t\n\t\tvar finalString = params + \"|\" + salt;\n\t\treturn crypto.createHash('sha256').update(finalString).digest('hex') + salt;\n\t}\n\tstatic calculateChecksum(params, key, salt) {\t\t\n\t\tvar hashString = PaytmChecksum.calculateHash(params, salt);\n\t\treturn PaytmChecksum.encrypt(hashString,key);\n\t}\n}\nPaytmChecksum.iv = '@@@@&&&&####$$$$';\nmodule.exports = PaytmChecksum;"]},"metadata":{},"sourceType":"script"}