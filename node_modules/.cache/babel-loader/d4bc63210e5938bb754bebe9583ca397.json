{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JYOTI95\\\\Documents\\\\GitHub\\\\DCIPL\\\\src\\\\Pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport Dashboard from './dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Register({\n  IsSignIn,\n  setIsSignIn\n}) {\n  _s();\n\n  const [User, setUser] = useState(\"\");\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n\n  const NameValue = event => {\n    event.preventDefault();\n    setUser(event.target.value);\n  };\n\n  const EmailValue = event => {\n    setEmail(event.target.value);\n  };\n\n  const PasswordValue = event => {\n    event.preventDefault();\n    setPassword(event.target.value);\n  };\n\n  const OnSubmit = event => {\n    event.preventDefault();\n    onSubmitSignIn();\n  };\n\n  const onSubmitSignIn = () => {\n    fetch('http://localhost:3011/register', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: Email,\n        password: Password,\n        name: User\n      })\n    }).then(response => response.json()).then(response => {\n      if (response.id) {\n        console.log(\"user\");\n        setIsSignIn(true);\n        /*this.props.loadUser(user)\r\n        this.props.onRouteChange('home');*/\n      } else {\n        console.log(response);\n        alert(\"Email Already Exists\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: IsSignIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        User: User\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logregister_form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"#\",\n              method: \"post\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name\",\n                required: true,\n                onChange: NameValue,\n                value: User\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"E-Mail\",\n                required: true,\n                onChange: EmailValue,\n                value: Email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Password\",\n                required: true,\n                onChange: PasswordValue,\n                value: Password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"cpassword\",\n                id: \"cpassword\",\n                value: \"\",\n                placeholder: \"Confirm password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                name: \"submit\",\n                value: \"Submit\",\n                onClick: OnSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"text-center\",\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"./Register\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(Register, \"2PMOfO22JG+dY2tUquMhxTAgkKw=\");\n\n_c = Register;\n;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/JYOTI95/Documents/GitHub/DCIPL/src/Pages/register.js"],"names":["React","useState","Dashboard","Register","IsSignIn","setIsSignIn","User","setUser","Email","setEmail","Password","setPassword","NameValue","event","preventDefault","target","value","EmailValue","PasswordValue","OnSubmit","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","password","name","then","response","json","id","console","log","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport Dashboard from './dashboard';\r\n\r\n\r\nfunction Register({IsSignIn, setIsSignIn}) {\r\n  \r\n  const [User, setUser] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n\r\n  const NameValue = (event) => {\r\n  event.preventDefault();\r\n  setUser(event.target.value);\r\n  };\r\n\r\n  const EmailValue = (event) => {\r\n  setEmail(event.target.value);\r\n  };\r\n\r\nconst PasswordValue = (event) => {\r\n  event.preventDefault();\r\n  setPassword(event.target.value);\r\n  };\r\n\r\n  const OnSubmit = (event) => {\r\n    event.preventDefault();\r\n    onSubmitSignIn()\r\n  }\r\n\r\n  const onSubmitSignIn = () => {\r\n    fetch('http://localhost:3011/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: Email,\r\n        password: Password,\r\n        name: User\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.id) {\r\n          console.log(\"user\")\r\n          setIsSignIn(true);\r\n          \r\n          /*this.props.loadUser(user)\r\n          this.props.onRouteChange('home');*/\r\n        } else {\r\n          console.log(response)\r\n          alert(\"Email Already Exists\")\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n{IsSignIn ? (\r\n  <>\r\n  <br/>\r\n        <Dashboard User={User}/>\r\n</>\r\n      ) : (\r\n        <>\r\n        <main>\r\n <div>\r\n                <div className=\"logregister_form\">  \r\n                    <h2 className=\"text\">Register</h2>\r\n                    <form action=\"#\" method=\"post\">\r\n                        <input type=\"text\" name=\"name\" placeholder=\"Name\" required onChange={NameValue} value={User}></input>\r\n                        <input type=\"email\" name=\"email\" placeholder=\"E-Mail\" required onChange={EmailValue} value={Email}></input>\r\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\"  required onChange={PasswordValue} value={Password}></input>\r\n                        <input type=\"password\" name=\"cpassword\" id=\"cpassword\" value=\"\" placeholder=\"Confirm password\"></input>\r\n                        <input type=\"submit\" name=\"submit\" value=\"Submit\"  onClick={OnSubmit}></input>\r\n         </form>\r\n         <div class=\"text-center\">Already have an account? <a href=\"./Register\">Sign in</a></div>\r\n               </div>\r\n </div>\r\n                    \r\n                            \r\n  </main>\r\n</>\r\n      )}\r\n\r\n\r\n\t\t\r\n\t\t</>\r\n\t\t)\r\n};\r\n\r\nexport default Register;\r\n\r\n"]},"metadata":{},"sourceType":"module"}