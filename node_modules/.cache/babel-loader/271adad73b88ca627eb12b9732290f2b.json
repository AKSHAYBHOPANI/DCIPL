{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/features/investment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport '../../App.css';\nimport '../CSS/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Investment({\n  IsSignIn,\n  setIsSignIn\n}) {\n  _s();\n\n  const [Name, setName] = useState(\"\");\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n\n  const EmailValue = event => {\n    setEmail(event.target.value);\n  };\n\n  const PasswordValue = event => {\n    event.preventDefault();\n    setPassword(event.target.value);\n  };\n\n  const handleIsSignIn = useCallback(event => {\n    setIsSignIn(true);\n  }, [setIsSignIn]);\n\n  const onSubmitSignIn = () => {\n    fetch('http://localhost:3011/signin', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: Email,\n        password: Password\n      })\n    }).then(response => response.json()).then(user => {\n      if (user.id) {\n        setName(user.name);\n        handleIsSignIn();\n      } else {\n        alert(\"Wrong Credentials\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: IsSignIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        User: Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(Investment, \"uH1UYinUVDrLm4LlnZLO/Htt264=\");\n\n_c = Investment;\n;\nexport default Investment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Investment\");","map":{"version":3,"sources":["/Users/akshaybhopani/GitHub/DCIPL/src/Pages/features/investment.js"],"names":["React","useState","useCallback","Investment","IsSignIn","setIsSignIn","Name","setName","Email","setEmail","Password","setPassword","EmailValue","event","target","value","PasswordValue","preventDefault","handleIsSignIn","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","id","name","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;;;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAApB,EAA6C;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAGA,QAAMW,UAAU,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACC,GAFD;;AAIF,QAAMC,aAAa,GAAIH,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACI,cAAN;AACAN,IAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACC,GAHH;;AAKE,QAAMG,cAAc,GAAGhB,WAAW,CAACW,KAAK,IAAI;AAC1CR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFiC,EAE/B,CAACA,WAAD,CAF+B,CAAlC;;AAIF,QAAMc,cAAc,GAAG,MAAM;AACzBC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF2B;AAGpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAElB,KADY;AAEnBmB,QAAAA,QAAQ,EAAEjB;AAFS,OAAf;AAH8B,KAAjC,CAAL,CAQGkB,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQG,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,EAAT,EAAa;AACXzB,QAAAA,OAAO,CAACwB,IAAI,CAACE,IAAN,CAAP;AACAf,QAAAA,cAAc;AACf,OAHD,MAGO;AACLgB,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,KAhBH;AAiBD,GAlBH;;AAoBC,sBACG;AAAA,cACC9B,QAAQ,gBACX;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA,cADA,eAEM,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFN;AAAA,oBADW,gBAMX,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAPE,mBADH;AAaA;;GApDQH,U;;KAAAA,U;AAoDR;AAED,eAAeA,UAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport '../../App.css';\nimport '../CSS/login.css';\n\nfunction Investment({IsSignIn, setIsSignIn}) {\n  const [Name, setName] = useState(\"\");\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n \n\n  const EmailValue = (event) => {\n  setEmail(event.target.value);\n  };\n\nconst PasswordValue = (event) => {\n  event.preventDefault();\n  setPassword(event.target.value);\n  };\n\n  const handleIsSignIn = useCallback(event => {\n    setIsSignIn(true);\n  }, [setIsSignIn])\n\nconst onSubmitSignIn = () => {\n    fetch('http://localhost:3011/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: Email,\n        password: Password\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          setName(user.name)\n          handleIsSignIn();\n        } else {\n          alert(\"Wrong Credentials\")\n        }\n      })\n  }\n\n\treturn (\n    <>\n    {IsSignIn ? (\n  <>\n  <br/>\n        <Dashboard User={Name}/>\n</>\n      ) : (\n  <Login/>\n        )}\n\t\t</>\n\n\t\t)\n};\n\nexport default Investment;"]},"metadata":{},"sourceType":"module"}