{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport Dashboard from './dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [User, setUser] = useState(\"\");\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [IsSignIn, setIsSignIn] = useState(false);\n\n  const NameValue = event => {\n    event.preventDefault();\n    setUser(event.target.value);\n  };\n\n  const EmailValue = event => {\n    setEmail(event.target.value);\n  };\n\n  const PasswordValue = event => {\n    event.preventDefault();\n    setPassword(event.target.value);\n  };\n\n  const OnSubmit = event => {\n    event.preventDefault();\n    onSubmitSignIn();\n  };\n\n  const onSubmitSignIn = () => {\n    fetch('http://localhost:3011/register', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: Email,\n        password: Password,\n        name: User\n      })\n    }).then(response => response.json()).then(user => {\n      if (user) {\n        console.log(user);\n        alert(user.detail);\n        setUser(user.name);\n        /*this.props.loadUser(user)\n        this.props.onRouteChange('home');*/\n      } else {\n        alert(user.detail);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: IsSignIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        User: User\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logregister_form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"#\",\n              method: \"post\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name\",\n                required: true,\n                onChange: NameValue,\n                value: User\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 126\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"E-Mail\",\n                required: true,\n                onChange: EmailValue,\n                value: Email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 132\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Password\",\n                required: true,\n                onChange: PasswordValue,\n                value: Password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 147\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: OnSubmit,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(Register, \"rCBOr2ztjk0xN/hNrq+MiNUiVyQ=\");\n\n_c = Register;\n;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/akshaybhopani/GitHub/DCIPL/src/Pages/register.js"],"names":["React","useState","Dashboard","Register","User","setUser","Email","setEmail","Password","setPassword","IsSignIn","setIsSignIn","NameValue","event","preventDefault","target","value","EmailValue","PasswordValue","OnSubmit","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","password","name","then","response","json","user","console","log","alert","detail"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport Dashboard from './dashboard';\n\n\nfunction Register() {\n  \n  const [User, setUser] = useState(\"\");\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [IsSignIn, setIsSignIn] = useState(false);\n\n  const NameValue = (event) => {\n  event.preventDefault();\n  setUser(event.target.value);\n  };\n\n  const EmailValue = (event) => {\n  setEmail(event.target.value);\n  };\n\nconst PasswordValue = (event) => {\n  event.preventDefault();\n  setPassword(event.target.value);\n  };\n\n  const OnSubmit = (event) => {\n    event.preventDefault();\n    onSubmitSignIn()\n  }\n\n  const onSubmitSignIn = () => {\n    fetch('http://localhost:3011/register', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: Email,\n        password: Password,\n        name: User\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user) {\n          console.log(user)\n          alert(user.detail)\n          setUser(user.name)\n          /*this.props.loadUser(user)\n          this.props.onRouteChange('home');*/\n        } else {\n          alert(user.detail)\n        }\n      })\n  }\n\n\n\treturn (\n\t\t<>\n{IsSignIn ? (\n  <>\n  <br/>\n        <Dashboard User={User}/>\n</>\n      ) : (\n        <>\n        <main>\n <div>\n                <div className=\"logregister_form\">  \n                    <h1>Register</h1>\n                    <form action=\"#\" method=\"post\">\n                        <br></br>\n                        <input type=\"text\" name=\"name\" placeholder=\"Name\" required onChange={NameValue} value={User}></input><br></br>\n                        <input type=\"email\" name=\"email\" placeholder=\"E-Mail\" required onChange={EmailValue} value={Email}></input><br></br>\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\"  required onChange={PasswordValue} value={Password}></input><br></br>\n                    </form>\n                </div>\n                <div className= \"btn-group\">\n                    <button type=\"submit\" onClick={OnSubmit}>Register</button>\n                    \n                </div>\n            </div>\n  </main>\n</>\n      )}\n\n\n\t\t\n\t\t</>\n\t\t)\n};\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}