{"ast":null,"code":"/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return function () {\n    function anonymous() {\n      this.__entries__ = [];\n    }\n\n    var prototypeAccessors = {\n      size: {\n        configurable: true\n      }\n    };\n    /**\r\n     * @returns {boolean}\r\n     */\n\n    prototypeAccessors.size.get = function () {\n      return this.__entries__.length;\n    };\n    /**\r\n     * @param {*} key\r\n     * @returns {*}\r\n     */\n\n\n    anonymous.prototype.get = function (key) {\n      var index = getIndex(this.__entries__, key);\n      var entry = this.__entries__[index];\n      return entry && entry[1];\n    };\n    /**\r\n     * @param {*} key\r\n     * @param {*} value\r\n     * @returns {void}\r\n     */\n\n\n    anonymous.prototype.set = function (key, value) {\n      var index = getIndex(this.__entries__, key);\n\n      if (~index) {\n        this.__entries__[index][1] = value;\n      } else {\n        this.__entries__.push([key, value]);\n      }\n    };\n    /**\r\n     * @param {*} key\r\n     * @returns {void}\r\n     */\n\n\n    anonymous.prototype.delete = function (key) {\n      var entries = this.__entries__;\n      var index = getIndex(entries, key);\n\n      if (~index) {\n        entries.splice(index, 1);\n      }\n    };\n    /**\r\n     * @param {*} key\r\n     * @returns {void}\r\n     */\n\n\n    anonymous.prototype.has = function (key) {\n      return !!~getIndex(this.__entries__, key);\n    };\n    /**\r\n     * @returns {void}\r\n     */\n\n\n    anonymous.prototype.clear = function () {\n      this.__entries__.splice(0);\n    };\n    /**\r\n     * @param {Function} callback\r\n     * @param {*} [ctx=null]\r\n     * @returns {void}\r\n     */\n\n\n    anonymous.prototype.forEach = function (callback, ctx) {\n      var this$1 = this;\n      if (ctx === void 0) ctx = null;\n\n      for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n        var entry = list[i];\n        callback.call(ctx, entry[1], entry[0]);\n      }\n    };\n\n    Object.defineProperties(anonymous.prototype, prototypeAccessors);\n    return anonymous;\n  }();\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nvar throttle = function (callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n}; // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController = function () {\n  this.connected_ = false;\n  this.mutationEventsAdded_ = false;\n  this.mutationsObserver_ = null;\n  this.observers_ = [];\n  this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n  this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\n\n\nResizeObserverController.prototype.addObserver = function (observer) {\n  if (!~this.observers_.indexOf(observer)) {\n    this.observers_.push(observer);\n  } // Add listeners if they haven't been added yet.\n\n\n  if (!this.connected_) {\n    this.connect_();\n  }\n};\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\n\n\nResizeObserverController.prototype.removeObserver = function (observer) {\n  var observers = this.observers_;\n  var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n  if (~index) {\n    observers.splice(index, 1);\n  } // Remove listeners if controller has no connected observers.\n\n\n  if (!observers.length && this.connected_) {\n    this.disconnect_();\n  }\n};\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\n\n\nResizeObserverController.prototype.refresh = function () {\n  var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n  // be future ones caused by CSS transitions.\n\n  if (changesDetected) {\n    this.refresh();\n  }\n};\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\n\n\nResizeObserverController.prototype.updateObservers_ = function () {\n  // Collect observers that have active observations.\n  var activeObservers = this.observers_.filter(function (observer) {\n    return observer.gatherActive(), observer.hasActive();\n  }); // Deliver notifications in a separate cycle in order to avoid any\n  // collisions between observers, e.g. when multiple instances of\n  // ResizeObserver are tracking the same element and the callback of one\n  // of them changes content dimensions of the observed target. Sometimes\n  // this may result in notifications being blocked for the rest of observers.\n\n  activeObservers.forEach(function (observer) {\n    return observer.broadcastActive();\n  });\n  return activeObservers.length > 0;\n};\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\n\n\nResizeObserverController.prototype.connect_ = function () {\n  // Do nothing if running in a non-browser environment or if listeners\n  // have been already added.\n  if (!isBrowser || this.connected_) {\n    return;\n  } // Subscription to the \"Transitionend\" event is used as a workaround for\n  // delayed transitions. This way it's possible to capture at least the\n  // final state of an element.\n\n\n  document.addEventListener('transitionend', this.onTransitionEnd_);\n  window.addEventListener('resize', this.refresh);\n\n  if (mutationObserverSupported) {\n    this.mutationsObserver_ = new MutationObserver(this.refresh);\n    this.mutationsObserver_.observe(document, {\n      attributes: true,\n      childList: true,\n      characterData: true,\n      subtree: true\n    });\n  } else {\n    document.addEventListener('DOMSubtreeModified', this.refresh);\n    this.mutationEventsAdded_ = true;\n  }\n\n  this.connected_ = true;\n};\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\n\n\nResizeObserverController.prototype.disconnect_ = function () {\n  // Do nothing if running in a non-browser environment or if listeners\n  // have been already removed.\n  if (!isBrowser || !this.connected_) {\n    return;\n  }\n\n  document.removeEventListener('transitionend', this.onTransitionEnd_);\n  window.removeEventListener('resize', this.refresh);\n\n  if (this.mutationsObserver_) {\n    this.mutationsObserver_.disconnect();\n  }\n\n  if (this.mutationEventsAdded_) {\n    document.removeEventListener('DOMSubtreeModified', this.refresh);\n  }\n\n  this.mutationsObserver_ = null;\n  this.mutationEventsAdded_ = false;\n  this.connected_ = false;\n};\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\n\n\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n  var propertyName = ref.propertyName;\n  if (propertyName === void 0) propertyName = ''; // Detect whether transition may affect dimensions of an element.\n\n  var isReflowProperty = transitionKeys.some(function (key) {\n    return !!~propertyName.indexOf(key);\n  });\n\n  if (isReflowProperty) {\n    this.refresh();\n  }\n};\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\n\n\nResizeObserverController.getInstance = function () {\n  if (!this.instance_) {\n    this.instance_ = new ResizeObserverController();\n  }\n\n  return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\nvar defineConfigurable = function (target, props) {\n  for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n    var key = list[i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function (target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) positions[len] = arguments[len + 1];\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var i = 0, list = positions; i < list.length; i += 1) {\n    var position = list[i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth;\n  var clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(ref) {\n  var x = ref.x;\n  var y = ref.y;\n  var width = ref.width;\n  var height = ref.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation = function (target) {\n  this.broadcastWidth = 0;\n  this.broadcastHeight = 0;\n  this.contentRect_ = createRectInit(0, 0, 0, 0);\n  this.target = target;\n};\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\n\n\nResizeObservation.prototype.isActive = function () {\n  var rect = getContentRect(this.target);\n  this.contentRect_ = rect;\n  return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\n\n\nResizeObservation.prototype.broadcastRect = function () {\n  var rect = this.contentRect_;\n  this.broadcastWidth = rect.width;\n  this.broadcastHeight = rect.height;\n  return rect;\n};\n\nvar ResizeObserverEntry = function (target, rectInit) {\n  var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n  // and are also not enumerable in the native implementation.\n  //\n  // Property accessors are not being used as they'd require to define a\n  // private WeakMap storage which may cause memory leaks in browsers that\n  // don't support this type of collections.\n\n  defineConfigurable(this, {\n    target: target,\n    contentRect: contentRect\n  });\n};\n\nvar ResizeObserverSPI = function (callback, controller, callbackCtx) {\n  this.activeObservations_ = [];\n  this.observations_ = new MapShim();\n\n  if (typeof callback !== 'function') {\n    throw new TypeError('The callback provided as parameter 1 is not a function.');\n  }\n\n  this.callback_ = callback;\n  this.controller_ = controller;\n  this.callbackCtx_ = callbackCtx;\n};\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\n\n\nResizeObserverSPI.prototype.observe = function (target) {\n  if (!arguments.length) {\n    throw new TypeError('1 argument required, but only 0 present.');\n  } // Do nothing if current environment doesn't have the Element interface.\n\n\n  if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n    return;\n  }\n\n  if (!(target instanceof getWindowOf(target).Element)) {\n    throw new TypeError('parameter 1 is not of type \"Element\".');\n  }\n\n  var observations = this.observations_; // Do nothing if element is already being observed.\n\n  if (observations.has(target)) {\n    return;\n  }\n\n  observations.set(target, new ResizeObservation(target));\n  this.controller_.addObserver(this); // Force the update of observations.\n\n  this.controller_.refresh();\n};\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\n\n\nResizeObserverSPI.prototype.unobserve = function (target) {\n  if (!arguments.length) {\n    throw new TypeError('1 argument required, but only 0 present.');\n  } // Do nothing if current environment doesn't have the Element interface.\n\n\n  if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n    return;\n  }\n\n  if (!(target instanceof getWindowOf(target).Element)) {\n    throw new TypeError('parameter 1 is not of type \"Element\".');\n  }\n\n  var observations = this.observations_; // Do nothing if element is not being observed.\n\n  if (!observations.has(target)) {\n    return;\n  }\n\n  observations.delete(target);\n\n  if (!observations.size) {\n    this.controller_.removeObserver(this);\n  }\n};\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\n\n\nResizeObserverSPI.prototype.disconnect = function () {\n  this.clearActive();\n  this.observations_.clear();\n  this.controller_.removeObserver(this);\n};\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\n\n\nResizeObserverSPI.prototype.gatherActive = function () {\n  var this$1 = this;\n  this.clearActive();\n  this.observations_.forEach(function (observation) {\n    if (observation.isActive()) {\n      this$1.activeObservations_.push(observation);\n    }\n  });\n};\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\n\n\nResizeObserverSPI.prototype.broadcastActive = function () {\n  // Do nothing if observer doesn't have active observations.\n  if (!this.hasActive()) {\n    return;\n  }\n\n  var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n  var entries = this.activeObservations_.map(function (observation) {\n    return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n  });\n  this.callback_.call(ctx, entries, ctx);\n  this.clearActive();\n};\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\n\n\nResizeObserverSPI.prototype.clearActive = function () {\n  this.activeObservations_.splice(0);\n};\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\n\n\nResizeObserverSPI.prototype.hasActive = function () {\n  return this.activeObservations_.length > 0;\n}; // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver = function (callback) {\n  if (!(this instanceof ResizeObserver)) {\n    throw new TypeError('Cannot call a class as a function.');\n  }\n\n  if (!arguments.length) {\n    throw new TypeError('1 argument required, but only 0 present.');\n  }\n\n  var controller = ResizeObserverController.getInstance();\n  var observer = new ResizeObserverSPI(callback, controller, this);\n  observers.set(this, observer);\n}; // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    return (ref = observers.get(this))[method].apply(ref, arguments);\n    var ref;\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;","map":{"version":3,"sources":["C:/Users/JYOTI95/Documents/GitHub/DCIPL/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["MapShim","Map","getIndex","arr","key","result","some","entry","index","anonymous","__entries__","prototypeAccessors","size","configurable","get","length","prototype","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","this$1","i","list","call","Object","defineProperties","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","ref","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","target","props","keys","defineProperty","enumerable","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","arguments","reduce","position","getPaddings","paddings","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","apply"],"mappings":"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","sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}