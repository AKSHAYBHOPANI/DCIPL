{"ast":null,"code":"var _jsxFileName = \"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioLow.js\";\nimport React from 'react';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioLow(targetreturn) {\n  const GetPortfolioLow = () => {\n    fetch('http://localhost:8000/portfolio-data').then(response => response.json()).then(response => {\n      console.log(response);\n      var txt = \"\";\n      var i = \"\";\n      txt += \"<table>\";\n      txt += \"<tr>\";\n      txt += \"<th>Assest Class</th>\";\n      txt += \"<th>Allocation%</th>\";\n      txt += \"<th>Allocation</th>\";\n      txt += \"<th>Weighted Return%</th>\";\n      txt += \"<th>Weighted Return</th>\";\n      txt += \"<th>SD</th>\";\n      txt += \"<th>Weighted SD</th>\";\n      txt += \"</tr>\";\n\n      for (i = 0; i < response.length; i++) {\n        txt += \"<tr>\";\n        txt += \"<td>\" + JSON.stringify(response[i].assestclass) + \"</td>\";\n        txt += \"<td>\" + JSON.stringify(response[i].name) + \"</td>\";\n        txt += \"<td>\" + JSON.stringify(response[i].email) + \"</td>\";\n        txt += \"<td>\" + JSON.stringify(response[i].totalincome) + \"</td>\";\n        txt += \"<td>\" + JSON.stringify(response[i].totalexpenses) + \"</td>\";\n        txt += \"<td>\" + JSON.stringify(response[i].assests) + \"</td>\";\n        txt += \"<td>\" + JSON.stringify(response[i].liabilities) + \"</td>\";\n        txt += \"</tr>\";\n      }\n\n      txt += \"</table>\";\n      document.getElementById('users').innerHTML = txt;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), GetPortfolioLow()]\n  }, void 0, true);\n}\n\n_c = PortfolioLow;\n;\nexport default PortfolioLow;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioLow\");","map":{"version":3,"sources":["/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioLow.js"],"names":["React","PortfolioLow","targetreturn","GetPortfolioLow","fetch","then","response","json","console","log","txt","i","length","JSON","stringify","assestclass","name","email","totalincome","totalexpenses","assests","liabilities","document","getElementById","innerHTML"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;;AAGA,SAASC,YAAT,CAAsBC,YAAtB,EAAoC;AAEpC,QAAMC,eAAe,GAAG,MAAM;AAE9BC,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACOC,IADP,CACYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADxB,EAEOF,IAFP,CAEYC,QAAQ,IAAI;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAII,GAAG,GAAG,EAAV;AACA,UAAIC,CAAC,GAAE,EAAP;AACAD,MAAAA,GAAG,IAAI,SAAP;AACAA,MAAAA,GAAG,IAAI,MAAP;AACFA,MAAAA,GAAG,IAAI,uBAAP;AACAA,MAAAA,GAAG,IAAI,sBAAP;AACAA,MAAAA,GAAG,IAAI,qBAAP;AACAA,MAAAA,GAAG,IAAI,2BAAP;AACAA,MAAAA,GAAG,IAAI,0BAAP;AACAA,MAAAA,GAAG,IAAI,aAAP;AACAA,MAAAA,GAAG,IAAI,sBAAP;AACAA,MAAAA,GAAG,IAAI,OAAP;;AACE,WAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,QAAQ,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAExCD,QAAAA,GAAG,IAAI,MAAP;AACAA,QAAAA,GAAG,IAAI,SAASG,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACK,CAAD,CAAR,CAAYI,WAA3B,CAAT,GAAmD,OAA1D;AACAL,QAAAA,GAAG,IAAI,SAASG,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACK,CAAD,CAAR,CAAYK,IAA3B,CAAT,GAA4C,OAAnD;AACAN,QAAAA,GAAG,IAAI,SAASG,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACK,CAAD,CAAR,CAAYM,KAA3B,CAAT,GAA6C,OAApD;AACAP,QAAAA,GAAG,IAAI,SAASG,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACK,CAAD,CAAR,CAAYO,WAA3B,CAAT,GAAmD,OAA1D;AACAR,QAAAA,GAAG,IAAI,SAASG,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACK,CAAD,CAAR,CAAYQ,aAA3B,CAAT,GAAqD,OAA5D;AACAT,QAAAA,GAAG,IAAI,SAASG,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACK,CAAD,CAAR,CAAYS,OAA3B,CAAT,GAA+C,OAAtD;AACAV,QAAAA,GAAG,IAAI,SAASG,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACK,CAAD,CAAR,CAAYU,WAA3B,CAAT,GAAmD,OAA1D;AAEAX,QAAAA,GAAG,IAAI,OAAP;AACL;;AACMA,MAAAA,GAAG,IAAI,UAAP;AACDY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA2Cd,GAA3C;AAEC,KAhCP;AAiCC,GAnCD;;AAsCI,sBACI;AAAA,4BACR;AAAA,6BACA;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADQ,EAIPP,eAAe,EAJR;AAAA,kBADJ;AAQH;;KAhDQF,Y;AAgDR;AAED,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport '../../App.css';\n\n\nfunction PortfolioLow(targetreturn) {\n\nconst GetPortfolioLow = () => {\n  \nfetch('http://localhost:8000/portfolio-data')\n      .then(response => response.json())\n      .then(response => {\n        console.log(response)\n        var txt = \"\"\n        var i =\"\"\n        txt += \"<table>\"\n        txt += \"<tr>\"\n      txt += \"<th>Assest Class</th>\"\n      txt += \"<th>Allocation%</th>\"\n      txt += \"<th>Allocation</th>\" \n      txt += \"<th>Weighted Return%</th>\"\n      txt += \"<th>Weighted Return</th>\"\n      txt += \"<th>SD</th>\"\n      txt += \"<th>Weighted SD</th>\"\n      txt += \"</tr>\"\n        for (i = 0; i < response.length; i++) {\n        \n      txt += \"<tr>\"\n      txt += \"<td>\" + JSON.stringify(response[i].assestclass) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].name) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].email) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].totalincome) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].totalexpenses) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].assests) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].liabilities) + \"</td>\";\n      \n      txt += \"</tr>\"\n}\n       txt += \"</table>\"\n      document.getElementById('users').innerHTML=txt;\n     \n      })\n}\n\n\n    return (\n        <>\n<table>\n<div id=\"users\"></div>\n</table>\n{GetPortfolioLow()}\n         </>\n        )\n};\n\nexport default PortfolioLow;"]},"metadata":{},"sourceType":"module"}