[{"/Users/akshaybhopani/GitHub/DCIPL/src/index.js":"1","/Users/akshaybhopani/GitHub/DCIPL/src/reportWebVitals.js":"2","/Users/akshaybhopani/GitHub/DCIPL/src/App.js":"3","/Users/akshaybhopani/GitHub/DCIPL/src/Main.js":"4","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Nav.js":"5","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Footer.js":"6","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/about.js":"7","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/Home.js":"8","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/login.js":"9","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/intro.js":"10","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/careers.js":"11","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/features/investment.js":"12","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/admin.js":"13","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/register.js":"14","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/blog.js":"15","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/dashboard.js":"16","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/AssestClassLow.js":"17","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/AssestClassMedium.js":"18","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioHigh.js":"19","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioMedium.js":"20","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioLow.js":"21","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/AssestClassHigh.js":"22"},{"size":543,"mtime":1621157187074,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1621157187077,"results":"25","hashOfConfig":"24"},{"size":521,"mtime":1625756683317,"results":"26","hashOfConfig":"24"},{"size":1344,"mtime":1625756842931,"results":"27","hashOfConfig":"24"},{"size":1457,"mtime":1625592989378,"results":"28","hashOfConfig":"24"},{"size":2800,"mtime":1624626906074,"results":"29","hashOfConfig":"24"},{"size":1981,"mtime":1624383410180,"results":"30","hashOfConfig":"24"},{"size":3615,"mtime":1624383341078,"results":"31","hashOfConfig":"24"},{"size":3478,"mtime":1626523779242,"results":"32","hashOfConfig":"24"},{"size":427,"mtime":1624383684254,"results":"33","hashOfConfig":"24"},{"size":1291,"mtime":1622471392666,"results":"34","hashOfConfig":"24"},{"size":7800,"mtime":1625908969995,"results":"35","hashOfConfig":"24"},{"size":11261,"mtime":1626194999626,"results":"36","hashOfConfig":"24"},{"size":3553,"mtime":1626524285643,"results":"37","hashOfConfig":"24"},{"size":281,"mtime":1624626906076,"results":"38","hashOfConfig":"24"},{"size":18770,"mtime":1626194201907,"results":"39","hashOfConfig":"24"},{"size":1744,"mtime":1624383094447,"results":"40","hashOfConfig":"24"},{"size":3234,"mtime":1624383101460,"results":"41","hashOfConfig":"24"},{"size":4052,"mtime":1624468046345,"results":"42","hashOfConfig":"24"},{"size":1769,"mtime":1626537784019,"results":"43","hashOfConfig":"24"},{"size":5008,"mtime":1624467973446,"results":"44","hashOfConfig":"24"},{"size":4177,"mtime":1624383088806,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"uu0gbw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/akshaybhopani/GitHub/DCIPL/src/index.js",[],["94","95"],"/Users/akshaybhopani/GitHub/DCIPL/src/reportWebVitals.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/App.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Main.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Nav.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Footer.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/about.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/Home.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/login.js",["96","97"],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/intro.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/careers.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/features/investment.js",["98"],"import React, { useState} from 'react';\nimport '../../App.css';\nimport '../CSS/login.css';\nimport './CSS/investment.css';\nimport Login from '../login';\nimport AssetClassHigh from \"../../Components/Investment/AssestClassHigh\";\nimport AssetClassMedium from \"../../Components/Investment/AssestClassMedium\";\nimport AssetClassLow from \"../../Components/Investment/AssestClassLow\";\nimport PortfolioHigh from \"../../Components/Investment/PortfolioHigh\";\nimport PortfolioMedium from \"../../Components/Investment/PortfolioMedium\";\nimport PortfolioLow from \"../../Components/Investment/PortfolioLow\";\nfunction Investment({Profile, setProfile}) {\n\nconst [FixedIncome, setFixedIncome] = useState(\"\");\nconst [VariableIncome, setVariableIncome] = useState(\"\");\nconst [FixedExpenses, setFixedExpenses] = useState(\"\");\nconst [VariableExpenses, setVariableExpenses] = useState(\"\");\nconst [Assests, setAssests] = useState(\"\");\nconst [Liabilities, setLiabilities] = useState(\"\");\nconst [TargetAmount, setTargetAmount] = useState(\"\"); \nconst [Time, setTime] = useState(\"\");\nconst [IncomeStability, setIncomeStability] = useState(\"\");\nconst [IsFormSubmitted, setIsFormSubmitted] = useState(false);    \nconst [Data, setData] = useState(\"\");\nvar AssetClass;\nvar Portfolio;\nif (Data.riskability===\"high\") {\n  AssetClass = <AssetClassHigh />\n} else if (Data.riskability===\"Medium\") {\n  AssetClass = <AssetClassMedium />\n} else if (Data.riskability===\"Low\") {\n  AssetClass = <AssetClassLow />\n}\n\nif (Data.riskability===\"high\") {\n  Portfolio = <PortfolioHigh targetreturn={Data.targetreturn}/>\n} else if (Data.riskability===\"Medium\") {\n  Portfolio = <PortfolioMedium targetreturn={Data.targetreturn} />\n} else if (Data.riskability===\"Low\") {\n  Portfolio = <PortfolioLow targetreturn={Data.targetreturn}/>\n}\n\n const FixedIncomeValue = (event) => {\n  setFixedIncome(event.target.value);\n  };\n\n  const VariableIncomeValue = (event) => {\n  setVariableIncome(event.target.value);\n  };\n\n  const FixedExpensesValue = (event) => {\n  setFixedExpenses(event.target.value);\n  };\n\n  const VariableExpensesValue = (event) => {\n  setVariableExpenses(event.target.value);\n  };\n\n  const AssestsValue = (event) => {\n  setAssests(event.target.value);\n  };\n\n  const LiabilitiesValue = (event) => {\n  setLiabilities(event.target.value);\n  };\n\n  const TargetAmountValue = (event) => {\n  setTargetAmount(event.target.value);\n  };\n  \n  const TimeValue = (event) => {\n  setTime(event.target.value);\n  };\n\n  const IncomeStabilityValue = (event) => {\n  setIncomeStability(event.target.value);\n  };\n\nconst OnPageLoad = () => {\nconst Profile = localStorage.getItem(\"Profile\");\n\nCheckIsFormSubmitted();\n}\n\nconst CheckIsFormSubmitted = () => {\n    fetch('https://server.yourtechshow.com/IsInvestmentFormSubmitted', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        Email: Profile.email,\n\n      })\n    })\n      \n      .then(response => response.json())\n      .then(response => {\n       if (response.email) {\n        setIsFormSubmitted(true);\n        setData(response);\n        console.log(response)\n       } else {\n       setIsFormSubmitted(false);\n     }\n       })\n  }\n\nconst onSubmitSignIn = (e) => {\n  e.preventDefault();\n  document.getElementById('logo').style.display=\"block\";\n    fetch('https://server.yourtechshow.com/investment', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        User: Profile.name,\n        Email: Profile.Email,\n        FixedIncome: FixedIncome,\n        VariableIncome: VariableIncome,\n        FixedExpenses: FixedExpenses,\n        VariableExpenses: VariableExpenses,\n        Assests: Assests,\n        Liabilities: Liabilities,\n        TargetAmount: TargetAmount,\n        Time: Time,\n        IncomeStability: IncomeStability\n\n      })\n    })\n      \n      .then(response => response.json())\n      .then(response => {\n       if (response.time) {\n        alert(\"Thank You For Submitting Data\");\n        console.log(response);\n        document.getElementById('logo').style.display=\"none\";\n        setIsFormSubmitted(true);\n        setData(response);\n       } else {\n       alert(\"Error, Something Went Wrong.\");\n       console.log(response);\n       document.getElementById('logo').style.display=\"none\";\n     }\n       })\n  }\n\n\treturn (\n    <>\n    {Profile.IsSignIn ? (\n  <>\n  {IsFormSubmitted ? (\n  <> \n<br></br><br></br><br></br>\n{console.log(Profile)}\n<h1>Congratulations {Profile.name}, Your Investment Portfolio Is Generated ✅</h1>\n<h2> Your Current Net Worth is {Data.networth}</h2>\n<h2>It will take {Data.targetamount/Data.investableamount} Years To Raise {Data.targetamount} if you invest {Data.investableamount} Per Year.</h2>\n<h2>Suggested Assest Classes To Invest In (Tailored just for you) - </h2>\n\n{AssetClass}\n\n<h2>Suggested Portfolio's To Invest In (as per your Target Return of {Data.targetreturn}%) - </h2>\n\n{Portfolio}\n\n</>\n) : (\n<>\n<br/><br/><br/><br/><br/><br/>\n  <h1 className=\"Title\">Investment Planning</h1>\n  <h2 className=\"Title\">On The Basis Of Income</h2>\n  <div className=\"Form\">\n  <form onSubmit={onSubmitSignIn}>\n                        <br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Fixed Income (Per Month)\" required onChange={FixedIncomeValue} value={FixedIncome}></input><br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Variable Income (Per Month)\" required onChange={VariableIncomeValue} value={VariableIncome}></input><br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Fixed Expenses (Per Month)\" required onChange={FixedExpensesValue} value={FixedExpenses} max={parseInt(FixedIncome)}></input><br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Variable Expenses (Per Month)\" required onChange={VariableExpensesValue} value={VariableExpenses} max={parseInt(VariableIncome)}></input><br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Assests\" required onChange={AssestsValue} value={Assests}></input><br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Liabilities\" required onChange={LiabilitiesValue} value={Liabilities}></input><br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Target Amount (Goal)\" required onChange={TargetAmountValue} value={TargetAmount} min={parseInt(FixedIncome)}></input><br></br>\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Time Duration For Investment (In Years)\" required onChange={TimeValue} value={Time} min=\"1\"></input><br></br>\n                        <label>Income Stability - </label>\n                          <select onChange={IncomeStabilityValue} value={IncomeStability} required>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Very Unstable\">Very Unstable</option>\n                            <option value=\"Unstable\">Unstable</option>\n                            <option value=\"Somewhat Stable\">Somewhat Stable</option>\n                            <option value=\"Stable\" >Stable</option>\n                            <option value=\"Very Stable\">Very Stable</option>\n                          </select>\n                          \n                          <button type=\"submit\">Calculate</button>\n                        </form> <br></br>\n</div> \n<div id=\"logo\" className=\"loadingio-spinner-rolling-kswyn6f3gj7\"><div className=\"ldio-c9p079igqka\">\n<div></div>\n</div></div>\n<br></br>   <br></br> <br></br> \n{OnPageLoad()}\n</>\n)}\n</>\n      ) : (\n  <Login Profile={Profile} setProfile={setProfile}/>\n        )}\n\t\t</>\n\n\t\t)\n};\n\nexport default Investment;","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/admin.js",["99","100"],"import React, { useState , useEffect }  from 'react';\nimport './CSS/admin.css';\nimport Login from './login';\n\nfunction Admin(Profile) {\nconst [IsSignIn, setIsSignIn] = useState(false);\nconst [UsersCount, setUsersCount] = useState(\"\");\nvar [date,setDate] = useState(new Date());\nconst GetUsers = () => {\n  document.getElementById('logo').style.display=\"block\";\nfetch('https://server.yourtechshow.com/users')\n      .then(response => response.json())\n      .then(response => {\n      \tconsole.log(response)\n      \tvar txt = \"\"\n      \tvar i =\"\"\n        txt += \"<table>\"\n        txt += \"<tr>\"\n      txt += \"<th>ID</th>\"\n      txt += \"<th>Name</th>\"\n      txt += \"<th>Email</th>\"\n      txt += \"<th>Joined</th>\"  \n      txt += \"</tr>\"\n      \tfor (i = 0; i < response.length; i++) {\n      txt += \"<tr>\"\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].id) + \"</td>\";\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].name) + \"</td>\";\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].email) + \"</td>\";\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].joined) + \"</td>\";\n    \ttxt += \"</tr>\"\n}\n      txt += \"</table>\"\t\n      document.getElementById('users').innerHTML=txt;\n      document.getElementById('logo').style.display=\"none\";\n      })\n} \n\nconst GetOnboarding = () => {\n  document.getElementById('logo').style.display=\"block\";\nfetch('https://server.yourtechshow.com/onboarding-data')\n      .then(response => response.json())\n      .then(response => {\n        console.log(response)\n        var txt = \"\"\n        var i =\"\"\n        txt += \"<table>\"\n        txt += \"<tr>\"\n      txt += \"<th>ID</th>\"\n      txt += \"<th>Name</th>\"\n      txt += \"<th>Email</th>\"\n      txt += \"<th>Age</th>\"\n      txt += \"<th>Assets</th>\"\n      txt += \"<th>Liabilities</th>\" \n      txt += \"<th>CIBIL</th>\" \n      txt += \"<th>Fixed Income</th>\" \n      txt += \"<th>Fixed Expenses</th>\" \n      txt += \"<th>Expected DSAL</th>\" \n      txt += \"<th>Debt By Income</th>\" \n      txt += \"<th>FOIR</th>\" \n      txt += \"<th>Debt By Assets</th>\" \n      txt += \"<th>Recurring</th>\" \n      txt += \"<th>Withdraw Principle</th>\" \n      txt += \"<th>Period</th>\" \n      txt += \"<th>Source Of Income</th>\" \n      txt += \"<th>Major Expenses</th>\" \n      txt += \"<th>Stock Invest</th>\" \n      txt += \"<th>Bond Invest</th>\"\n      txt += \"<th>Goal</th>\" \n      txt += \"<th>Yearly Invested</th>\" \n      txt += \"<th>Over Time</th>\" \n      txt += \"<th>Yearly Expect</th>\" \n      txt += \"<th>Long Term Growth</th>\" \n      txt += \"<th>Portfolio</th>\" \n      txt += \"<th>Outlook Short Term</th>\"\n      txt += \"<th>Outlook Long Term</th>\" \n      txt += \"<th>Objective</th>\" \n      txt += \"<th>Risk Willingness</th>\" \n      txt += \"<th>Risk Ability</th>\" \n      txt += \"<th>Total Risk</th>\"   \n      txt += \"</tr>\"\n        for (i = 0; i < response.length; i++) {\n      txt += \"<tr>\"\n      txt += \"<td>\" + JSON.stringify(response[i].id) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].name) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].email) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].age) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].assets) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].liabilities) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].cibil) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].fixedincome) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].fixedexpense) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].expectedsal) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].debt_by_income) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].foir) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].debt_by_assets) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].reccuring) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].withdrawprincipal) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].period) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].sourceofincome) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].majorexpense) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].stockinvest) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].bondnvest) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].goal) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].yearsinvested) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].overtime) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].yearlyexpect) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].longtermgrowth) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].portfolio) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].outlookshorterm) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].outlooklongterm) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].objective) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].riskwillingness) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].riskability) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].totalrisk) + \"</td>\";\n      txt += \"</tr>\"\n}\n      txt += \"</table>\" \n      document.getElementById('users').innerHTML=txt;\n      document.getElementById('logo').style.display=\"none\";\n      })\n}  \n\nconst GetInvestment = () => {\n  document.getElementById('logo').style.display=\"block\";\nfetch('https://server.yourtechshow.com/investment')\n      .then(response => response.json())\n      .then(response => {\n        console.log(response)\n        var txt = \"\"\n        var i =\"\"\n        txt += \"<table>\"\n        txt += \"<tr>\"\n      txt += \"<th>ID</th>\"\n      txt += \"<th>Name</th>\"\n      txt += \"<th>Email</th>\"\n      txt += \"<th>Total Income</th>\" \n      txt += \"<th>Total Expenses</th>\"\n      txt += \"<th>Assests</th>\"\n      txt += \"<th>Liabilities</th>\"\n      txt += \"<th>Investable Amount</th>\"\n      txt += \"<th>Target Amount</th>\"\n      txt += \"<th>Time</th>\"\n      txt += \"<th>Income Stability</th>\"\n      txt += \"<th>Surplus</th>\"\n      txt += \"<th>Margin</th>\"\n      txt += \"<th>Break Even</th>\"\n      txt += \"<th>Margin Of Safety</th>\"\n      txt += \"<th>Margin Of Safety Rs</th>\"\n      txt += \"<th>Burn Rate</th>\"\n      txt += \"<th>Return</th>\"\n      txt += \"<th>NetWorth</th>\"\n      txt += \"<th>Risk Ability</th>\"\n      txt += \"<th>Target Return</th>\"\n      txt += \"</tr>\"\n        for (i = 0; i < response.length; i++) {\n        \n      txt += \"<tr>\"\n      txt += \"<td>\" + JSON.stringify(response[i].id) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].name) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].email) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].totalincome) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].totalexpenses) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].assests) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].liabilities) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].investableamount) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].targetamount) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].time) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].incomestability) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].surplus) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].margin) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].breakeven) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].marginofsafety) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].marginofsafetyrs) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].burnrate) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].return) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].networth) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].riskability) + \"</td>\";\n      txt += \"<td>\" + JSON.stringify(response[i].targetreturn) + \"</td>\";\n      txt += \"</tr>\"\n}\n       txt += \"</table>\"\n      document.getElementById('users').innerHTML=txt;\n      document.getElementById('logo').style.display=\"none\";\n      })\n}\n\nconst GetStats = () => {\nfetch('https://server.yourtechshow.com/stats-users')\n      .then(response => response.json())\n      .then(response => {\n        setUsersCount(response.users)\n        return;\n      })\n} \n\nconst GetUsersCSV = () => {\n  document.getElementById('logo').style.display=\"block\";\nfetch('https://server.yourtechshow.com/getUserCsv')\n    \n      .then(response => {\n        console.log(response)\n        if (response.ok) {\n          alert(\"Export Successfully\")\n          window.location.href = \"https://server.yourtechshow.com/users.csv\";\n        } else {\n          alert(\"Error\")\n        }\n        document.getElementById('logo').style.display=\"none\";\n      })\n} \n\n\nconst GetOnboardingCSV = () => {\n  document.getElementById('logo').style.display=\"block\";\nfetch('https://server.yourtechshow.com/getOnboardingCsv')\n    \n      .then(response => {\n        console.log(response)\n        if (response.ok) {\n          alert(\"Export Successfully\")\n          window.location.href = \"https://server.yourtechshow.com/onboarding.csv\";\n        } else {\n          alert(\"Error\")\n        }\n        document.getElementById('logo').style.display=\"none\";\n      })\n} \n\nconst GetInvestmentsCSV = () => {\n  document.getElementById('logo').style.display=\"block\";\nfetch('https://server.yourtechshow.com/getInvestmentCsv')\n    \n      .then(response => {\n        console.log(response)\n        if (response.ok) {\n          alert(\"Export Successfully\")\n          window.location.href = \"https://server.yourtechshow.com/investment.csv\";\n        } else {\n          alert(\"Error\")\n        }\n        document.getElementById('logo').style.display=\"none\";\n      })\n} \n    useEffect(() => {\n        var timer = setInterval(()=>setDate(new Date()), 1000 )\n        return function cleanup() {\n            clearInterval(timer)\n        }\n    \n    });\n                           \n\treturn (\n       <>\n    {Profile.Profile.IsSignIn ? (\n  <>\n  <div>\n<br/><br/><br/><br/>{console.log(Profile)}\n<h2>Welcome, <span className=\"admin\">Admin</span> <br/>Today is {date.toLocaleString()}</h2>\n<br/>\n<h2 className =\"register\">Total Registered Users = {UsersCount}</h2><br/>\n<div className=\"menu-container\">\n<button className=\"button-a\" onClick={GetUsers}>Users</button>\n<button className=\"button-a\" onClick={GetOnboarding}>Onboarding</button>\n<button className=\"button-a\" onClick={GetInvestment}>Investment</button>\n<button className=\"button-a\" onClick={GetUsers}>Tax</button>\n</div>\n\n<table>\n<div id=\"users\"></div>\n</table>\n<div className=\"menu-container\">\n<button className=\"button-a\" onClick={GetUsersCSV}>Export Users Data</button>\n<button className=\"button-a\" onClick={GetOnboardingCSV}>Export Onboarding Data</button>\n<button className=\"button-a\" onClick={GetInvestmentsCSV}>Export Investments Data</button>\n<button className=\"button-a\" onClick={GetInvestmentsCSV}>Export Tax Data</button>\n</div>\n</div>\n{GetStats()}\n<div id=\"logo\" className=\"loadingio-spinner-rolling-kswyn6f3gj7\"><div className=\"ldio-c9p079igqka\">\n<div></div>\n</div></div>\n</>\n      ) : (\n<div>\n<Login Profile={Profile} setProfile={Profile.setProfile}/>\n</div>\n        )}\n\t\t</>\n\n)\n};\n\nexport default Admin;","/Users/akshaybhopani/GitHub/DCIPL/src/Pages/register.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/blog.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Pages/dashboard.js",["101","102","103","104"],"import React, { useState , useEffect }  from 'react';\nimport './CSS/dash.css';\nimport Ellipse from \"../assests/Ellipse 1.png\";\nimport line1 from \"../assests/Line 1.png\";\nimport line2 from \"../assests/Line 2.png\";\nimport line3 from \"../assests/Line 3.png\";\nimport rect1 from \"../assests/rect1.jpg\"; \nimport rect2 from \"../assests/rect2.jpg\"; \nimport Portfolio from \"../assests/portfolio.png\";\n\nfunction Dashboard(Profile) {\n\nconst [age, setage] = useState(\"\");\nconst [assets, setassets] = useState(\"\");\nconst [liabilities, setliabilities] = useState(\"\");\nconst [cibil, setcibil] = useState(\"\");\nconst [fixedincome, setfixedincome] = useState(\"\");\nconst [fixedexpense, setfixedexpense] = useState(\"\");\nconst [expectedSal, setexpectedSal] = useState(\"\");\nconst [withdrawPrincipal, setwithdrawPrincipal] = useState(\"\");\nconst [period, setperiod] = useState(\"\");\nconst [sourceOfIncome, setsourceOfIncome] = useState(\"\");\nconst [majorExpense, setmajorExpense] = useState(\"\");\nconst [stockInvest, setstockInvest] = useState(\"\");\nconst [bondInvest, setbondInvest] = useState(\"\");\nconst [goal, setgoal] = useState(\"\");\nconst [yearsInvested, setyearsInvested] = useState(\"\");\nconst [overtime, setovertime] = useState(\"\");\nconst [yearlyExpect, setyearlyExpect] = useState(\"\");\n\nconst [longtermGrowth, setlongtermGrowth] = useState(\"\");\nconst [portfolio, setportfolio] = useState(\"\");\nconst [outlookShorterm, setoutlookShorterm] = useState(\"\");\nconst [outlookLongterm, setoutlookLongterm] = useState(\"\");\nconst [objective, setobjective] = useState(\"\");\nconst [riskWillingness, setriskWillingness] = useState(\"\");\nconst [riskability, setriskability] = useState(\"\");\n\n var [date,setDate] = useState(new Date());\n    \n    useEffect(() => {\n        var timer = setInterval(()=>setDate(new Date()), 1000 )\n        return function cleanup() {\n            clearInterval(timer)\n        }\n    \n    });\n\nconst OnPageLoad = () => {\n\n}\n\nconst onSubmitSignIn = (e) => {\n  e.preventDefault();\n  console.log(Profile)\n  document.getElementById('logo').style.display=\"block\";\n    fetch('https://server.yourtechshow.com/onboarding', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n       name: Profile.Profile.Profile.name,\n       email: Profile.Profile.Profile.email,\n       age: age,\n       assets: assets,\n       liabilities: liabilities,\n       cibil: cibil,\n       fixedincome: fixedincome,\n       fixedexpense: fixedexpense,\n       expectedSal: expectedSal,\n       withdrawPrincipal: withdrawPrincipal,\n       period: period,\n       sourceOfIncome: sourceOfIncome,\n       majorExpense: majorExpense,\n       stockInvest: stockInvest,\n       bondInvest: bondInvest,\n       goal: goal,\n       yearsInvested: yearsInvested,\n       overtime: overtime,\n       yearlyExpect: yearlyExpect,\n       longtermGrowth: longtermGrowth,\n       portfolio: portfolio,\n       outlookShorterm: outlookShorterm,\n       outlookLongterm: outlookLongterm,\n       objective: objective         \n              \n      })\n    })\n      \n      .then(response => response.json())\n      .then(response => {\n       if (response.age) {\n        console.log(Profile)\n        alert(\"Thank You For Submitting Data\");\n        console.log(response);\n        Profile.Profile.setProfile(prevState => {\n    return Object.assign({}, prevState, { id: Profile.Profile.Profile.id, name: Profile.Profile.Profile.name,\n    email: Profile.Profile.Profile.email,\n    IsSignIn: true,\n    IsonBoarding: true });\n  });\n        \n       \n       } else {\n       alert(\"Error, Something Went Wrong.\");\n       console.log(response);\n       document.getElementById('logo').style.display=\"none\";\n     }\n       })\n  }\n                           \n\treturn (\n\t\t<>\n    {Profile.Profile.Profile.IsonBoarding ? (\n        <>\n\t    <div className=\"area\">\n<div className=\"content\">\n<p>Welcome, {Profile.Profile.Profile.name} Today is {date.toLocaleString()}</p>\n</div>\n<div className=\"text\">\n<div className=\"sub\">\n<p>Personal Finance Portfolio</p>\n</div>\n<div className=\"h1\">\n<p>Holdings</p>\n</div>\n<div className=\"h2\">\n<p>Value</p>\n</div>\n<div className=\"sub1\">\n<p>Stocks</p>\n</div>\n<div className=\"sub2\">\n<p>Mutual Funds</p>\n</div>\n<div className=\"sub3\">\n<p>Health Insurance</p>\n</div>\n<div className=\"h2sub1\">\n<p>Rs XXXX</p>\n</div>\n<div className=\"h2sub2\">\n<p>Rs XXXX</p>\n</div>\n<div className=\"h2sub3\">\n<p>Rs XXXX</p>\n</div>\n</div>\n<div className=\"pie\">\n<img src={Ellipse} alt=\"ellipse\"/>\n</div>\n<div className=\"line1\">\n<img src={line1} alt=\"line1\"/>\n<p>10%</p>\n</div>\n<div className=\"line2\">\n<img src={line2} alt=\"line2\"/>\n<p>73%</p>\n</div>\n<div className=\"line3\">\n<img src={line3} alt=\"line3\"/>\n<p>23%</p>\n</div>\n\n<div className=\"images\">\n<div className=\"features\">\n<a href=\"./features/investment\"><img alt=\"\" src={rect1}/><p>Investment Planning</p></a></div>\n</div>\n<div className=\"images\">\n<div className=\"features\">\n<a href=\"./\"><img alt=\"\" src={rect2}/><p>Tax Planning</p></a>\n</div>\n</div>\n</div>\n{OnPageLoad()}\n\n\n</>\n      ) : (\n      <>\n      <br/><br/>\n      <h1>Onboarding</h1>\n      <h2>Welcome {Profile.Profile.Profile.name} to DCIPL, There are few things needed before we can start your Financial Planning</h2>\n      <br/>\n      <div className=\"Form\">\n      <form onSubmit={onSubmitSignIn}>\n<label for=\"age\">Age: </label>\n    <input type=\"number\" name=\"age\" id=\"age\" placeholder=\"Age\" required onChange={(event) => {setage(event.target.value)}} value={age}></input>\n<label for=\"assests\">Assests: </label>\n    <input type=\"number\" name=\"assests\" id=\"assests\" placeholder=\"Assests\" required onChange={(event) => {setassets(event.target.value)}} value={assets}></input>\n<label for=\"liabilities\">Liabilities: </label>\n    <input type=\"number\" name=\"liabilities\" id=\"liabilities\" placeholder=\"Liabilities\" required onChange={(event) => {setliabilities(event.target.value)}} value={liabilities}></input>\n<label for=\"cibil\">Fixed Income </label>\n    <input type=\"number\" name=\"fixedincome\" id=\"fixedincome\" placeholder=\"Fixed Income\" required onChange={(event) => {setfixedincome(event.target.value)}} value={fixedincome}></input>\n<label for=\"cibil\">Fixed Expense </label>\n    <input type=\"number\" name=\"fixedexpense\" id=\"fixedexpense\" placeholder=\"Fixed Expense\" required onChange={(event) => {setfixedexpense(event.target.value)}} value={fixedexpense}></input>\n<label for=\"cibil\">CIBIL Score - <a href=\"https://www.cibil.com/freecibilscore\">Check Now</a> </label>\n    <input type=\"number\" name=\"cibil\" id=\"cibil\" placeholder=\"CIBIL Score\" required onChange={(event) => {setcibil(event.target.value)}} value={cibil}></input>\n<label for=\"\">What is your expected salary?</label>\n    <input type=\"\" name=\"\" id=\"\" required onChange={(event) => {setexpectedSal(event.target.value)}} value={expectedSal}></input>\n    <label for=\"\">By when does you expect to start withdrawing principal?</label>\n    <input type=\"\" name=\"\" id=\"\" required onChange={(event) => {setwithdrawPrincipal(event.target.value)}} value={withdrawPrincipal}></input>\n    <label for=\"\">Once you begin using the money you accumulated,you expect to use that money for a period of </label>\n    <input type=\"\" name=\"\" id=\"\" required onChange={(event) => {setperiod(event.target.value)}} value={period}></input>\n    <label>Current and future source of income: - </label>\n                          <select required onChange={(event) => {setsourceOfIncome(event.target.value)}} value={sourceOfIncome}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Very Unstable\">Very Unstable</option>\n                            <option value=\"Unstable\">Unstable</option>\n                            <option value=\"Somewhat Stable\">Somewhat Stable</option>\n                            <option value=\"Stable\" >Stable</option>\n                            <option value=\"Very Stable\">Very Stable</option>\n                          </select><br/>\n     <label>Aside from portfolio, Do you have adequate liquid assets to meet major expenses in next 6-9 months ? </label>\n                          <select required onChange={(event) => {setmajorExpense(event.target.value)}} value={majorExpense}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Strongly Agree\">Strongly Agree</option>\n                          <option value=\"Agree\">Agree</option>\n                            <option value=\"Neutral\">Neutral</option>\n                            <option value=\"Disagree\">Disagree</option>\n                            <option value=\"Strongly Disagree\">Strongly Disagree</option>\n                          </select><br/>\n                          \n    <label>If you owned a stock investment portfolio that lost more than 25% in 7 months, you would</label>\n                          <select required onChange={(event) => {setstockInvest(event.target.value)}} value={stockInvest}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Sell all remaining investments\">Sell all remaining investments</option>\n                            <option value=\"Sell a portion of remaining investments\">Sell a portion of remaining investments</option>\n                            <option value=\"Hold on to investments and sell nothing\">Hold on to investments and sell nothing</option>\n                            <option value=\"Buy more of the investments\" >Buy more of the investments</option>\n                          </select><br/>\n\n   <label>If you owned a bond investment portfolio that lost\n9% in 11 months, you would</label>\n                          <select required onChange={(event) => {setbondInvest(event.target.value)}} value={bondInvest}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Sell all remaining investments\">Sell all remaining investments</option>\n                            <option value=\"Sell a portion of remaining investments\">Sell a portion of remaining investments</option>\n                            <option value=\"Hold on to investments and sell nothing\">Hold on to investments and sell nothing</option>\n                            <option value=\"Buy more of the investments\" >Buy more of the investments</option>\n                          </select><br/>\n\n   <label>Before you make a decision on any investment, you need to\nconsider how you feel about the prospect of potential loss of principal.\nThis is a basic principle of investing: the higher return you seek, the more risk you face.\nBased on your feelings about risk and potential returns, your goal is to</label>\n                          <select required onChange={(event) => {setgoal(event.target.value)}} value={goal}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Potentially increase portfolio’s value as quickly as possible while accepting higher levels of risk or loss of principal\">Potentially increase portfolio’s value as quickly as possible while accepting higher levels of risk or loss of principal</option>\n                            <option value=\"Potentially increase my portfolio’s value at a moderate pace while accepting moderate to high levels of risk or loss of principal\">Potentially increase my portfolio’s value at a moderate pace while accepting moderate to high levels of risk or loss of principal</option>\n                            <option value=\"Get Income as a Primary concern, Capital Appreciation as Secondary\">Get Income as a Primary concern, Capital Appreciation as Secondary</option>\n                            <option value=\"Secure the safety of my hard earned investment principal\" >Secure the safety of my hard earned investment principal</option>\n                          </select><br/>\n\n   <label>How many years have you been investing in Financial Markets?</label>\n                          <select required onChange={(event) => {setyearsInvested(event.target.value)}} value={yearsInvested}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Never Invested\">Never Invested</option>\n                            <option value=\"one - seven years\">one - seven years</option>\n                            <option value=\"eight - fifteen years\">eight - fifteen years</option>\n                            <option value=\"More than fifteen years\" >More than fifteen years</option>\n                          </select><br/>\n\n   <label>Assuming normal market conditions you expect your portfolio to, overtime:</label>\n                          <select required onChange={(event) => {setovertime(event.target.value)}} value={overtime}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Outpace the market, have higher volatility\">Outpace the market, have higher volatility</option>\n                            <option value=\"Generally keep pace with the market\">Generally keep pace with the market</option>\n                            <option value=\"have lower risk and lower returns\">have lower risk and lower returns</option>\n                            <option value=\"have a high degree of stability with modest returns\" >have a high degree of stability with modest returns</option>\n                          </select><br/>\n                        \n  <label>You would prefer investments that have yearly:</label>\n                          <select required onChange={(event) => {setyearlyExpect(event.target.value)}} value={yearlyExpect}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"virtually risk free rate of return of 4%\">virtually risk free rate of return of 4%</option>\n                            <option value=\"Potential gain of 6% and a potential loss of 2%\">Potential gain of 6% and a potential loss of 2%</option>\n                            <option value=\"Potential gain of 8% and a potential loss of 4%\">Potential gain of 8% and a potential loss of 4%</option>\n                            <option value=\"Potential gain of 12% and a potential loss of 8%\" >Potential gain of 12% and a potential loss of 8%</option>\n                            <option value=\"Potential gain of 20% and a potential loss of 15%\" >Potential gain of 20% and a potential loss of 15%</option>\n                          </select><br/>\n\n    <label>Do you believe that you can endure significant ups and downs\nin the market, because you are looking for as much long-term growth\nfor your investments as possible</label>\n                          <select required onChange={(event) => {setlongtermGrowth(event.target.value)}} value={longtermGrowth}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Strongly Agree\">Strongly Agree</option>\n                            <option value=\"Agree\">Agree</option>\n                            <option value=\"Neutral\">Neutral</option>\n                            <option value=\"Disagree\" >Disagree</option>\n                            <option value=\"Strongly Disagree\" >Strongly Disagree</option>\n                          </select><br/>\n\n<label>Using given five year illustration, choose   \nwhich scenario appeals to you the most: <br/><br/> \n\n </label><img width=\"100%\" src={Portfolio} alt=\"Portfolio\"/><br/><br/>\n\n                          <select required onChange={(event) => {setportfolio(event.target.value)}} value={portfolio}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Portfolio 1\">Portfolio 1</option>\n                            <option value=\"Portfolio 2\">Portfolio 2</option>\n                            <option value=\"Portfolio 3\">Portfolio 3</option>\n                            <option value=\"Portfolio 4\" >Portfolio 4</option>\n                       \n                          </select><br/>\n\n<label>Prospects for future, in general\nhow do you describe your own outlook \nof the financial markets for the time periods listed\nFor Short term (0- 5 Years)</label>\n\n                          <select required onChange={(event) => {setoutlookLongterm(event.target.value)}} value={outlookLongterm}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Very Positive\">Very Positive</option>\n                            <option value=\"Modestly Positive\">Modestly Positive</option>\n                            <option value=\"Neutral\">Neutral</option>\n                            <option value=\"Negative\" >Negative</option>\n                            <option value=\"Very Negative\" >Very Negative</option>\n                          </select><br/>\n\n<label>For Long term (more than 5 years)</label>\n\n                          <select required onChange={(event) => {setoutlookShorterm(event.target.value)}} value={outlookShorterm}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Very Positive\">Very Positive</option>\n                            <option value=\"Modestly Positive\">Modestly Positive</option>\n                            <option value=\"Neutral\">Neutral</option>\n                            <option value=\"Negative\" >Negative</option>\n                            <option value=\"Very Negative\" >Very Negative</option>\n                          </select><br/>\n\n<label>What is your primary objective for this investment portfolio:</label>\n\n                          <select required onChange={(event) => {setobjective(event.target.value)}} value={objective}>\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\n                          <option value=\"Growth\">Growth</option>\n                            <option value=\"To generate income\">To generate income</option>\n                            <option value=\"To accumulate assets for retirement\">To accumulate assets for retirement</option>\n                            <option value=\"To assure the safety for principal\" >To assure the safety for principal</option>\n                      \n                          </select><br/>\n\n                          <button type=\"submit\">Submit</button>\n\n      </form>\n</div>\n<div id=\"logo\" className=\"loadingio-spinner-rolling-kswyn6f3gj7\"><div className=\"ldio-c9p079igqka\">\n<div></div>\n</div></div>      </>\n )}\n\t\t</>\n\n\t\t)\n};\n\nexport default Dashboard;","/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/AssestClassLow.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/AssestClassMedium.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioHigh.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioMedium.js",["105"],"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/PortfolioLow.js",[],"/Users/akshaybhopani/GitHub/DCIPL/src/Components/Investment/AssestClassHigh.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":38},{"ruleId":"110","severity":1,"message":"114","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":14},{"ruleId":"110","severity":1,"message":"115","line":80,"column":7,"nodeType":"112","messageId":"113","endLine":80,"endColumn":14},{"ruleId":"110","severity":1,"message":"116","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":16},{"ruleId":"110","severity":1,"message":"117","line":6,"column":18,"nodeType":"112","messageId":"113","endLine":6,"endColumn":29},{"ruleId":"110","severity":1,"message":"118","line":36,"column":8,"nodeType":"112","messageId":"113","endLine":36,"endColumn":23},{"ruleId":"110","severity":1,"message":"119","line":36,"column":25,"nodeType":"112","messageId":"113","endLine":36,"endColumn":43},{"ruleId":"110","severity":1,"message":"120","line":37,"column":8,"nodeType":"112","messageId":"113","endLine":37,"endColumn":19},{"ruleId":"110","severity":1,"message":"121","line":37,"column":21,"nodeType":"112","messageId":"113","endLine":37,"endColumn":35},{"ruleId":"122","severity":1,"message":"123","line":100,"column":1,"nodeType":"124","endLine":100,"endColumn":181},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Name' is assigned a value but never used.","'Profile' is assigned a value but never used.","'IsSignIn' is assigned a value but never used.","'setIsSignIn' is assigned a value but never used.","'riskWillingness' is assigned a value but never used.","'setriskWillingness' is assigned a value but never used.","'riskability' is assigned a value but never used.","'setriskability' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]