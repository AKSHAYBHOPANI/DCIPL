[{"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\App.js":"3","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Main.js":"4","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Nav.js":"5","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Footer.js":"6","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\login.js":"7","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\Home.js":"8","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\about.js":"9","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\register.js":"10","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\features\\investment.js":"11","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\careers.js":"12","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\intro.js":"13","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\blog.js":"14","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\admin.js":"15","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\dashboard.js":"16","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\AssestClassLow.js":"17","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\PortfolioHigh.js":"18","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\PortfolioLow.js":"19","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\AssestClassHigh.js":"20","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\AssestClassMedium.js":"21","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\PortfolioMedium.js":"22","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\features\\wealth.js":"23"},{"size":560,"mtime":1626064776921,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1626064776921,"results":"26","hashOfConfig":"25"},{"size":549,"mtime":1626064776841,"results":"27","hashOfConfig":"25"},{"size":1561,"mtime":1626610244293,"results":"28","hashOfConfig":"25"},{"size":1517,"mtime":1626064776847,"results":"29","hashOfConfig":"25"},{"size":2886,"mtime":1626064776843,"results":"30","hashOfConfig":"25"},{"size":3359,"mtime":1626064776860,"results":"31","hashOfConfig":"25"},{"size":3751,"mtime":1626064776854,"results":"32","hashOfConfig":"25"},{"size":2026,"mtime":1626064776854,"results":"33","hashOfConfig":"25"},{"size":3429,"mtime":1626064776861,"results":"34","hashOfConfig":"25"},{"size":7987,"mtime":1626064776859,"results":"35","hashOfConfig":"25"},{"size":1333,"mtime":1626064776856,"results":"36","hashOfConfig":"25"},{"size":452,"mtime":1626064776860,"results":"37","hashOfConfig":"25"},{"size":307,"mtime":1626064776855,"results":"38","hashOfConfig":"25"},{"size":6745,"mtime":1626064776854,"results":"39","hashOfConfig":"25"},{"size":17566,"mtime":1626064776857,"results":"40","hashOfConfig":"25"},{"size":1837,"mtime":1626064776844,"results":"41","hashOfConfig":"25"},{"size":4323,"mtime":1626064776845,"results":"42","hashOfConfig":"25"},{"size":5200,"mtime":1626064776846,"results":"43","hashOfConfig":"25"},{"size":4342,"mtime":1626064776843,"results":"44","hashOfConfig":"25"},{"size":3373,"mtime":1626064776844,"results":"45","hashOfConfig":"25"},{"size":3079,"mtime":1626064776846,"results":"46","hashOfConfig":"25"},{"size":6404,"mtime":1626612321915,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"12f8eo9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\index.js",[],["99","100"],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Main.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Nav.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Footer.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\login.js",["101","102"],"import React, { useState, useCallback } from 'react';\r\nimport '../App.css';\r\nimport './CSS/login.css';\r\nimport Dashboard from './dashboard';\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\nfunction Login(Profile) {\r\n  const [Name, setName] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n \r\n const responseFacebook = (response) => {\r\n  console.log(response);\r\n  setName(response.name);\r\n  setEmail(response.email);\r\n  \r\n}\r\n\r\n  const EmailValue = (event) => {\r\n  setEmail(event.target.value);\r\n  };\r\n\r\nconst PasswordValue = (event) => {\r\n  event.preventDefault();\r\n  setPassword(event.target.value);\r\n  };\r\n\r\n\r\n\r\nconst onSubmitSignIn = (e) => {\r\n  e.preventDefault();\r\n  document.getElementById('logo').style.display=\"block\";\r\n    fetch('https://server.yourtechshow.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: Email,\r\n        password: Password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          Profile.setProfile(prevState => {\r\n    return Object.assign({}, prevState, { id: user.id, name: user.name,\r\n    email: user.email,\r\n    IsSignIn: true,\r\n    IsonBoarding: false });\r\n  });\r\n        } else {\r\n          alert(\"Wrong Credentials\")\r\n          document.getElementById('logo').style.display=\"none\";\r\n        }\r\n      })\r\n  }\r\n\r\nconst OnPageLoad = () => {\r\nconst CheckIsSignInRes = localStorage.getItem(\"Profile\");\r\nconst CheckIsSignIn = JSON.parse(CheckIsSignInRes)\r\nif (CheckIsSignIn) {\r\n Profile.setProfile(CheckIsSignIn)\r\nconsole.log(CheckIsSignIn)\r\n} else {\r\n   console.log(CheckIsSignIn)\r\n}\r\n\r\n}\r\n\r\n\treturn (\r\n    <>\r\n    {Profile.Profile.IsSignIn ? (\r\n  <>\r\n  <br/>\r\n        <Dashboard Profile={Profile}/>\r\n        {localStorage.setItem(\"Profile\", JSON.stringify(Profile.Profile))}\r\n</>\r\n      ) : (\r\n  <main>\r\n            <div className=\"login-container\">\r\n                <h1 className=\"neon\" data-text=\"Register\">Login</h1>\r\n                <div className=\"login-signin\">  \r\n                    <form onSubmit={onSubmitSignIn}>\r\n                      <div className=\"login-input-field\"><input type=\"email\" name=\"email\" placeholder=\"Enter E-Mail ID\" required onChange={EmailValue} value={Email}></input></div>\r\n                      <div className=\"login-input-field\"><input type=\"password\" name=\"password\" placeholder=\"Enter your Password\"  required onChange={PasswordValue} value={Password}></input></div>\r\n                      <div className= \"login-button-group\">\r\n                        <button className=\"login-button\" type=\"submit\">login</button>\r\n                        <button className=\"login-button\" type=\"submit\"><a href=\"./register\">Register</a></button>\r\n                      </div>\r\n                       <FacebookLogin\r\n    appId=\"612293356405016\"\r\n    \r\n    fields=\"name,email,picture\"\r\n    callback={responseFacebook} \r\n    cssClass=\"reg-button\"/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n              \r\n                {OnPageLoad()}\r\n                \r\n               <div id=\"logo\" className=\"loadingio-spinner-rolling-kswyn6f3gj7\"><div className=\"ldio-c9p079igqka\">\r\n<div></div>\r\n</div></div>\r\n  </main>\r\n        )}\r\n\t\t</>\r\n\r\n\t\t)\r\n};\r\n\r\nexport default Login;","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\Home.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\about.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\register.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\features\\investment.js",["103"],"import React, { useState} from 'react';\r\nimport '../../App.css';\r\nimport '../CSS/login.css';\r\nimport './CSS/investment.css';\r\nimport Login from '../login';\r\nimport AssetClassHigh from \"../../Components/Investment/AssestClassHigh\";\r\nimport AssetClassMedium from \"../../Components/Investment/AssestClassMedium\";\r\nimport AssetClassLow from \"../../Components/Investment/AssestClassLow\";\r\nimport PortfolioHigh from \"../../Components/Investment/PortfolioHigh\";\r\nimport PortfolioMedium from \"../../Components/Investment/PortfolioMedium\";\r\nimport PortfolioLow from \"../../Components/Investment/PortfolioLow\";\r\nfunction Investment({Profile, setProfile}) {\r\n\r\nconst [FixedIncome, setFixedIncome] = useState(\"\");\r\nconst [VariableIncome, setVariableIncome] = useState(\"\");\r\nconst [FixedExpenses, setFixedExpenses] = useState(\"\");\r\nconst [VariableExpenses, setVariableExpenses] = useState(\"\");\r\nconst [Assests, setAssests] = useState(\"\");\r\nconst [Liabilities, setLiabilities] = useState(\"\");\r\nconst [TargetAmount, setTargetAmount] = useState(\"\"); \r\nconst [Time, setTime] = useState(\"\");\r\nconst [IncomeStability, setIncomeStability] = useState(\"\");\r\nconst [IsFormSubmitted, setIsFormSubmitted] = useState(false);    \r\nconst [Data, setData] = useState(\"\");\r\nvar AssetClass;\r\nvar Portfolio;\r\nif (Data.riskability===\"high\") {\r\n  AssetClass = <AssetClassHigh />\r\n} else if (Data.riskability===\"Medium\") {\r\n  AssetClass = <AssetClassMedium />\r\n} else if (Data.riskability===\"Low\") {\r\n  AssetClass = <AssetClassLow />\r\n}\r\n\r\nif (Data.riskability===\"high\") {\r\n  Portfolio = <PortfolioHigh targetreturn={Data.targetreturn}/>\r\n} else if (Data.riskability===\"Medium\") {\r\n  Portfolio = <PortfolioMedium targetreturn={Data.targetreturn} />\r\n} else if (Data.riskability===\"Low\") {\r\n  Portfolio = <PortfolioLow targetreturn={Data.targetreturn}/>\r\n}\r\n\r\n const FixedIncomeValue = (event) => {\r\n  setFixedIncome(event.target.value);\r\n  };\r\n\r\n  const VariableIncomeValue = (event) => {\r\n  setVariableIncome(event.target.value);\r\n  };\r\n\r\n  const FixedExpensesValue = (event) => {\r\n  setFixedExpenses(event.target.value);\r\n  };\r\n\r\n  const VariableExpensesValue = (event) => {\r\n  setVariableExpenses(event.target.value);\r\n  };\r\n\r\n  const AssestsValue = (event) => {\r\n  setAssests(event.target.value);\r\n  };\r\n\r\n  const LiabilitiesValue = (event) => {\r\n  setLiabilities(event.target.value);\r\n  };\r\n\r\n  const TargetAmountValue = (event) => {\r\n  setTargetAmount(event.target.value);\r\n  };\r\n  \r\n  const TimeValue = (event) => {\r\n  setTime(event.target.value);\r\n  };\r\n\r\n  const IncomeStabilityValue = (event) => {\r\n  setIncomeStability(event.target.value);\r\n  };\r\n\r\nconst OnPageLoad = () => {\r\nconst Profile = localStorage.getItem(\"Profile\");\r\n\r\nCheckIsFormSubmitted();\r\n}\r\n\r\nconst CheckIsFormSubmitted = () => {\r\n    fetch('https://server.yourtechshow.com/IsInvestmentFormSubmitted', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        Email: Profile.email,\r\n\r\n      })\r\n    })\r\n      \r\n      .then(response => response.json())\r\n      .then(response => {\r\n       if (response.email) {\r\n        setIsFormSubmitted(true);\r\n        setData(response);\r\n        console.log(response)\r\n       } else {\r\n       setIsFormSubmitted(false);\r\n     }\r\n       })\r\n  }\r\n\r\nconst onSubmitSignIn = (e) => {\r\n  e.preventDefault();\r\n  document.getElementById('logo').style.display=\"block\";\r\n    fetch('https://server.yourtechshow.com/investment', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        User: Profile.name,\r\n        Email: Profile.Email,\r\n        FixedIncome: FixedIncome,\r\n        VariableIncome: VariableIncome,\r\n        FixedExpenses: FixedExpenses,\r\n        VariableExpenses: VariableExpenses,\r\n        Assests: Assests,\r\n        Liabilities: Liabilities,\r\n        TargetAmount: TargetAmount,\r\n        Time: Time,\r\n        IncomeStability: IncomeStability\r\n\r\n      })\r\n    })\r\n      \r\n      .then(response => response.json())\r\n      .then(response => {\r\n       if (response.time) {\r\n        alert(\"Thank You For Submitting Data\");\r\n        console.log(response);\r\n        document.getElementById('logo').style.display=\"none\";\r\n        setIsFormSubmitted(true);\r\n        setData(response);\r\n       } else {\r\n       alert(\"Error, Something Went Wrong.\");\r\n       console.log(response);\r\n       document.getElementById('logo').style.display=\"none\";\r\n     }\r\n       })\r\n  }\r\n\r\n\treturn (\r\n    <>\r\n    {Profile.IsSignIn ? (\r\n  <>\r\n  {IsFormSubmitted ? (\r\n  <> \r\n<br></br><br></br><br></br>\r\n\r\n<h1>Congratulations {Profile.name}, Your Investment Portfolio Is Generated ✅</h1>\r\n<h2> Your Current Net Worth is {Data.networth}</h2>\r\n<h2>It will take {Data.targetamount/Data.investableamount} Years To Raise {Data.targetamount} if you invest {Data.investableamount} Per Year.</h2>\r\n<h2>Suggested Assest Classes To Invest In (Tailored just for you) - </h2>\r\n\r\n{AssetClass}\r\n\r\n<h2>Suggested Portfolio's To Invest In (as per your Target Return of {Data.targetreturn}%) - </h2>\r\n\r\n{Portfolio}\r\n\r\n</>\r\n) : (\r\n<>\r\n<br/><br/><br/><br/><br/><br/>\r\n  <h1 className=\"Title\">Investment Planning</h1>\r\n  <h2 className=\"Title\">On The Basis Of Income</h2>\r\n  <div className=\"Form\">\r\n  <form onSubmit={onSubmitSignIn}>\r\n                        <br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Fixed Income (Per Month)\" required onChange={FixedIncomeValue} value={FixedIncome}></input><br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Variable Income (Per Month)\" required onChange={VariableIncomeValue} value={VariableIncome}></input><br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Fixed Expenses (Per Month)\" required onChange={FixedExpensesValue} value={FixedExpenses} max={parseInt(FixedIncome)}></input><br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Variable Expenses (Per Month)\" required onChange={VariableExpensesValue} value={VariableExpenses} max={parseInt(VariableIncome)}></input><br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Assests\" required onChange={AssestsValue} value={Assests}></input><br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Liabilities\" required onChange={LiabilitiesValue} value={Liabilities}></input><br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Target Amount (Goal)\" required onChange={TargetAmountValue} value={TargetAmount} min={parseInt(FixedIncome)}></input><br></br>\r\n                        <input type=\"number\" name=\"fixed-income\" placeholder=\"Time Duration For Investment (In Years)\" required onChange={TimeValue} value={Time} min=\"1\"></input><br></br>\r\n                        <label>Income Stability - </label>\r\n                          <select onChange={IncomeStabilityValue} value={IncomeStability} required>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Very Unstable</option>\r\n                            <option value=\"Unstable\">Unstable</option>\r\n                            <option value=\"Somewhat Stable\">Somewhat Stable</option>\r\n                            <option value=\"Stable\" >Stable</option>\r\n                            <option value=\"Very Stable\">Very Stable</option>\r\n                          </select>\r\n                          \r\n                          <button type=\"submit\">Calculate</button>\r\n                        </form> <br></br>\r\n</div> \r\n<div id=\"logo\" className=\"loadingio-spinner-rolling-kswyn6f3gj7\"><div className=\"ldio-c9p079igqka\">\r\n<div></div>\r\n</div></div>\r\n<br></br>   <br></br> <br></br> \r\n{OnPageLoad()}\r\n</>\r\n)}\r\n</>\r\n      ) : (\r\n  <Login Profile={Profile} setProfile={setProfile}/>\r\n        )}\r\n\t\t</>\r\n\r\n\t\t)\r\n};\r\n\r\nexport default Investment;","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\careers.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\intro.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\blog.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\admin.js",["104","105"],"import React, { useState , useEffect }  from 'react';\r\nimport './CSS/admin.css';\r\nimport Login from './login';\r\n\r\nfunction Admin(Profile) {\r\nconst [IsSignIn, setIsSignIn] = useState(false);\r\nconst [UsersCount, setUsersCount] = useState(\"\");\r\nvar [date,setDate] = useState(new Date());\r\nconst GetUsers = () => {\r\n  document.getElementById('logo').style.display=\"block\";\r\nfetch('https://server.yourtechshow.com/users')\r\n      .then(response => response.json())\r\n      .then(response => {\r\n      \tconsole.log(response)\r\n      \tvar txt = \"\"\r\n      \tvar i =\"\"\r\n        txt += \"<table>\"\r\n        txt += \"<tr>\"\r\n      txt += \"<th>ID</th>\"\r\n      txt += \"<th>Name</th>\"\r\n      txt += \"<th>Email</th>\"\r\n      txt += \"<th>Joined</th>\"  \r\n      txt += \"</tr>\"\r\n      \tfor (i = 0; i < response.length; i++) {\r\n      txt += \"<tr>\"\r\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].id) + \"</td>\";\r\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].name) + \"</td>\";\r\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].email) + \"</td>\";\r\n  \t\ttxt += \"<td>\" + JSON.stringify(response[i].joined) + \"</td>\";\r\n    \ttxt += \"</tr>\"\r\n}\r\n      txt += \"</table>\"\t\r\n      document.getElementById('users').innerHTML=txt;\r\n      document.getElementById('logo').style.display=\"none\";\r\n      })\r\n}  \r\n\r\nconst GetInvestment = () => {\r\n  document.getElementById('logo').style.display=\"block\";\r\nfetch('https://server.yourtechshow.com/investment')\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response)\r\n        var txt = \"\"\r\n        var i =\"\"\r\n        txt += \"<table>\"\r\n        txt += \"<tr>\"\r\n      txt += \"<th>ID</th>\"\r\n      txt += \"<th>Name</th>\"\r\n      txt += \"<th>Email</th>\"\r\n      txt += \"<th>Total Income</th>\" \r\n      txt += \"<th>Total Expenses</th>\"\r\n      txt += \"<th>Assests</th>\"\r\n      txt += \"<th>Liabilities</th>\"\r\n      txt += \"<th>Investable Amount</th>\"\r\n      txt += \"<th>Target Amount</th>\"\r\n      txt += \"<th>Time</th>\"\r\n      txt += \"<th>Income Stability</th>\"\r\n      txt += \"<th>Surplus</th>\"\r\n      txt += \"<th>Margin</th>\"\r\n      txt += \"<th>Break Even</th>\"\r\n      txt += \"<th>Margin Of Safety</th>\"\r\n      txt += \"<th>Margin Of Safety Rs</th>\"\r\n      txt += \"<th>Burn Rate</th>\"\r\n      txt += \"<th>Return</th>\"\r\n      txt += \"<th>NetWorth</th>\"\r\n      txt += \"<th>Risk Ability</th>\"\r\n      txt += \"<th>Target Return</th>\"\r\n      txt += \"</tr>\"\r\n        for (i = 0; i < response.length; i++) {\r\n        \r\n      txt += \"<tr>\"\r\n      txt += \"<td>\" + JSON.stringify(response[i].id) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].name) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].email) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].totalincome) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].totalexpenses) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].assests) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].liabilities) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].investableamount) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].targetamount) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].time) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].incomestability) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].surplus) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].margin) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].breakeven) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].marginofsafety) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].marginofsafetyrs) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].burnrate) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].return) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].networth) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].riskability) + \"</td>\";\r\n      txt += \"<td>\" + JSON.stringify(response[i].targetreturn) + \"</td>\";\r\n      txt += \"</tr>\"\r\n}\r\n       txt += \"</table>\"\r\n      document.getElementById('users').innerHTML=txt;\r\n      document.getElementById('logo').style.display=\"none\";\r\n      })\r\n}\r\n\r\nconst GetStats = () => {\r\nfetch('https://server.yourtechshow.com/stats-users')\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        setUsersCount(response.users)\r\n        return;\r\n      })\r\n} \r\n\r\nconst GetUsersCSV = () => {\r\n  document.getElementById('logo').style.display=\"block\";\r\nfetch('https://server.yourtechshow.com/getUserCsv')\r\n    \r\n      .then(response => {\r\n        console.log(response)\r\n        if (response.ok) {\r\n          alert(\"Export Successfully\")\r\n          window.location.href = \"https://server.yourtechshow.com/users.csv\";\r\n        } else {\r\n          alert(\"Error\")\r\n        }\r\n        document.getElementById('logo').style.display=\"none\";\r\n      })\r\n} \r\n\r\nconst GetInvestmentsCSV = () => {\r\n  document.getElementById('logo').style.display=\"block\";\r\nfetch('https://server.yourtechshow.com/getInvestmentCsv')\r\n    \r\n      .then(response => {\r\n        console.log(response)\r\n        if (response.ok) {\r\n          alert(\"Export Successfully\")\r\n          window.location.href = \"https://server.yourtechshow.com/investment.csv\";\r\n        } else {\r\n          alert(\"Error\")\r\n        }\r\n        document.getElementById('logo').style.display=\"none\";\r\n      })\r\n} \r\n    useEffect(() => {\r\n        var timer = setInterval(()=>setDate(new Date()), 1000 )\r\n        return function cleanup() {\r\n            clearInterval(timer)\r\n        }\r\n    \r\n    });\r\n                           \r\n\treturn (\r\n       <>\r\n    {Profile.Profile.IsSignIn ? (\r\n  <>\r\n  <div>\r\n<br/><br/><br/><br/>{console.log(Profile)}\r\n<h2>Welcome, <span className=\"admin\">Admin</span> <br/>Today is {date.toLocaleString()}</h2>\r\n<br/>\r\n<h2 className =\"register\">Total Registered Users = {UsersCount}</h2><br/>\r\n<div className=\"menu-container\">\r\n<button className=\"button-a\" onClick={GetUsers}>Users</button>\r\n<button className=\"button-a\" onClick={GetInvestment}>Investment</button>\r\n<button className=\"button-a\" onClick={GetUsers}>Tax</button>\r\n</div>\r\n\r\n<table>\r\n<div id=\"users\"></div>\r\n</table>\r\n<div className=\"menu-container\">\r\n<button className=\"button-a\" onClick={GetUsersCSV}>Export Users Data</button>\r\n<button className=\"button-a\" onClick={GetInvestmentsCSV}>Export Investments Data</button>\r\n<button className=\"button-a\" onClick={GetInvestmentsCSV}>Export Tax Data</button>\r\n</div>\r\n</div>\r\n{GetStats()}\r\n<div id=\"logo\" className=\"loadingio-spinner-rolling-kswyn6f3gj7\"><div className=\"ldio-c9p079igqka\">\r\n<div></div>\r\n</div></div>\r\n</>\r\n      ) : (\r\n<div>\r\n<Login Profile={Profile} setProfile={Profile.setProfile}/>\r\n</div>\r\n        )}\r\n\t\t</>\r\n\r\n)\r\n};\r\n\r\nexport default Admin;","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\dashboard.js",["106","107"],"import React, { useState , useEffect }  from 'react';\r\nimport './CSS/dash.css';\r\nimport Ellipse from \"../assests/Ellipse 1.png\";\r\nimport line1 from \"../assests/Line 1.png\";\r\nimport line2 from \"../assests/Line 2.png\";\r\nimport line3 from \"../assests/Line 3.png\";\r\nimport rect1 from \"../assests/rect1.jpg\"; \r\nimport rect2 from \"../assests/rect2.jpg\"; \r\n\r\nfunction Dashboard(Profile) {\r\n\r\nconst [age, setage] = useState(\"\");\r\nconst [assets, setassets] = useState(\"\");\r\nconst [liabilities, setliabilities] = useState(\"\");\r\nconst [cibil, setcibil] = useState(\"\");\r\nconst [expectedSal, setexpectedSal] = useState(\"\");\r\nconst [withdrawPrincipal, setwithdrawPrincipal] = useState(\"\");\r\nconst [period, setperiod] = useState(\"\");\r\nconst [sourceOfIncome, setsourceOfIncome] = useState(\"\");\r\nconst [majorExpense, setmajorExpense] = useState(\"\");\r\nconst [stockInvest, setstockInvest] = useState(\"\");\r\nconst [bondInvest, setbondInvest] = useState(\"\");\r\nconst [goal, setgoal] = useState(\"\");\r\nconst [yearsInvested, setyearsInvested] = useState(\"\");\r\nconst [overtime, setovertime] = useState(\"\");\r\nconst [yearlyExpect, setyearlyExpect] = useState(\"\");\r\n\r\nconst [longtermGrowth, setlongtermGrowth] = useState(\"\");\r\nconst [portfolio, setportfolio] = useState(\"\");\r\nconst [outlookShorterm, setoutlookShorterm] = useState(\"\");\r\nconst [outlookLongterm, setoutlookLongterm] = useState(\"\");\r\nconst [objective, setobjective] = useState(\"\");\r\nconst [riskWillingness, setriskWillingness] = useState(\"\");\r\nconst [riskability, setriskability] = useState(\"\");\r\n\r\n var [date,setDate] = useState(new Date());\r\n    \r\n    useEffect(() => {\r\n        var timer = setInterval(()=>setDate(new Date()), 1000 )\r\n        return function cleanup() {\r\n            clearInterval(timer)\r\n        }\r\n    \r\n    });\r\n\r\nconst OnPageLoad = () => {\r\n\r\n}\r\n\r\nconst onSubmitSignIn = (e) => {\r\n  e.preventDefault();\r\n  document.getElementById('logo').style.display=\"block\";\r\n    fetch('http://127.0.0.1:8000/onboarding', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n       name: Profile.name,\r\n       email: Profile.email,\r\n       age: age,\r\n       assets: assets,\r\n       liabilities: liabilities,\r\n       cibil: cibil,\r\n       expectedSal: expectedSal,\r\n       withdrawPrincipal: withdrawPrincipal,\r\n       period: period,\r\n       sourceOfIncome: sourceOfIncome,\r\n       majorExpense: majorExpense,\r\n       stockInvest: stockInvest,\r\n       bondInvest: bondInvest,\r\n       goal: goal,\r\n       yearsInvested: yearsInvested,\r\n       overtime: overtime,\r\n       yearlyExpect: yearlyExpect,\r\n       longtermGrowth: longtermGrowth,\r\n       portfolio: portfolio,\r\n       outlookShorterm: outlookShorterm,\r\n       outlookLongterm: outlookLongterm,\r\n       objective: objective,\r\n       riskWillingness: riskWillingness,\r\n       riskability: riskability          \r\n              \r\n      })\r\n    })\r\n      \r\n      .then(response => response.json())\r\n      .then(response => {\r\n       if (response) {\r\n        console.log(Profile)\r\n        alert(\"Thank You For Submitting Data\");\r\n        console.log(response);\r\n        Profile.Profile.setProfile(prevState => {\r\n    return Object.assign({}, prevState, { id: Profile.Profile.Profile.id, name: Profile.Profile.Profile.name,\r\n    email: Profile.Profile.Profile.email,\r\n    IsSignIn: true,\r\n    IsonBoarding: true });\r\n  });\r\n        \r\n       \r\n       } else {\r\n       alert(\"Error, Something Went Wrong.\");\r\n       console.log(response);\r\n       document.getElementById('logo').style.display=\"none\";\r\n     }\r\n       })\r\n  }\r\n                           \r\n\treturn (\r\n\t\t<>\r\n    {Profile.Profile.Profile.IsonBoarding ? (\r\n        <>\r\n\t    <div className=\"area\">\r\n<div className=\"content\">\r\n<p>Welcome, {Profile.Profile.Profile.name} Today is {date.toLocaleString()}</p>\r\n</div>\r\n<div className=\"text\">\r\n<div className=\"sub\">\r\n<p>Personal Finance Portfolio</p>\r\n</div>\r\n<div className=\"h1\">\r\n<p>Holdings</p>\r\n</div>\r\n<div className=\"h2\">\r\n<p>Value</p>\r\n</div>\r\n<div className=\"sub1\">\r\n<p>Stocks</p>\r\n</div>\r\n<div className=\"sub2\">\r\n<p>Mutual Funds</p>\r\n</div>\r\n<div className=\"sub3\">\r\n<p>Health Insurance</p>\r\n</div>\r\n<div className=\"h2sub1\">\r\n<p>Rs XXXX</p>\r\n</div>\r\n<div className=\"h2sub2\">\r\n<p>Rs XXXX</p>\r\n</div>\r\n<div className=\"h2sub3\">\r\n<p>Rs XXXX</p>\r\n</div>\r\n</div>\r\n<div className=\"pie\">\r\n<img src={Ellipse} alt=\"ellipse\"/>\r\n</div>\r\n<div className=\"line1\">\r\n<img src={line1} alt=\"line1\"/>\r\n<p>10%</p>\r\n</div>\r\n<div className=\"line2\">\r\n<img src={line2} alt=\"line2\"/>\r\n<p>73%</p>\r\n</div>\r\n<div className=\"line3\">\r\n<img src={line3} alt=\"line3\"/>\r\n<p>23%</p>\r\n</div>\r\n\r\n<div className=\"images\">\r\n<div className=\"features\">\r\n<a href=\"./features/investment\"><img alt=\"\" src={rect1}/><p>Investment Planning</p></a></div>\r\n</div>\r\n<div className=\"images\">\r\n<div className=\"features\">\r\n<a href=\"./\"><img alt=\"\" src={rect2}/><p>Tax Planning</p></a>\r\n</div>\r\n</div>\r\n</div>\r\n{OnPageLoad()}\r\n\r\n\r\n</>\r\n      ) : (\r\n      <>\r\n      <br/><br/>\r\n      <h1>Onboarding</h1>\r\n      <h2>Welcome {Profile.Profile.Profile.name} to DCIPL, There are few things needed before we can start your Financial Planning</h2>\r\n      <br/>\r\n      <div className=\"Form\">\r\n      <form onSubmit={onSubmitSignIn}>\r\n<label for=\"age\">Age: </label>\r\n    <input type=\"number\" name=\"age\" id=\"age\" placeholder=\"Age\" required onChange={(event) => {setage(event.target.value)}} value={age}></input>\r\n<label for=\"assests\">Assests: </label>\r\n    <input type=\"number\" name=\"assests\" id=\"assests\" placeholder=\"Assests\" required onChange={(event) => {setassets(event.target.value)}} value={assets}></input>\r\n<label for=\"liabilities\">Liabilities: </label>\r\n    <input type=\"number\" name=\"liabilities\" id=\"liabilities\" placeholder=\"Liabilities\" required onChange={(event) => {setliabilities(event.target.value)}} value={liabilities}></input>\r\n<label for=\"cibil\">CIBIL Score: </label>\r\n    <input type=\"number\" name=\"cibil\" id=\"cibil\" placeholder=\"CIBIL Score\" required onChange={(event) => {setcibil(event.target.value)}} value={cibil}></input>\r\n<label for=\"\">What is the expected salary of the individual?</label>\r\n    <input type=\"\" name=\"\" id=\"\" required onChange={(event) => {setexpectedSal(event.target.value)}} value={expectedSal}></input>\r\n    <label for=\"\">By when does the individual expect to start withdrawing principal?</label>\r\n    <input type=\"\" name=\"\" id=\"\" required onChange={(event) => {setwithdrawPrincipal(event.target.value)}} value={withdrawPrincipal}></input>\r\n    <label for=\"\">Once the individual begins using the money he/she accumulated,they expect to use that money for a period of </label>\r\n    <input type=\"\" name=\"\" id=\"\" required onChange={(event) => {setperiod(event.target.value)}} value={period}></input>\r\n    <label>Current and future source of income: - </label>\r\n                          <select required onChange={(event) => {setsourceOfIncome(event.target.value)}} value={sourceOfIncome}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Very Unstable</option>\r\n                            <option value=\"Unstable\">Unstable</option>\r\n                            <option value=\"Somewhat Stable\">Somewhat Stable</option>\r\n                            <option value=\"Stable\" >Stable</option>\r\n                            <option value=\"Very Stable\">Very Stable</option>\r\n                          </select><br/>\r\n     <label>What is individual's response to the statement: Aside from portfolio, individual have adequate liquid assets to meet major expenses in next 6-9 months </label>\r\n                          <select required onChange={(event) => {setmajorExpense(event.target.value)}} value={majorExpense}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Agree</option>\r\n                            <option value=\"Unstable\">Neutral</option>\r\n                            <option value=\"Somewhat Stable\">Disagree</option>\r\n                            <option value=\"Stable\" >Stable</option>\r\n                            <option value=\"Very Stable\">Strongly Disagree</option>\r\n                          </select><br/>\r\n                          \r\n    <label>If the individual owned a stock investment portfolio that lost more than 25% in 7 months, he/she would</label>\r\n                          <select required onChange={(event) => {setstockInvest(event.target.value)}} value={stockInvest}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Sell all remaining investments</option>\r\n                            <option value=\"Unstable\">Sell a portion of remaining investments</option>\r\n                            <option value=\"Somewhat Stable\">Hold on to investments and sell nothing</option>\r\n                            <option value=\"Stable\" >Buy more of the investments</option>\r\n                          </select><br/>\r\n\r\n   <label>If the individual owned a bond investment portfolio that lost\r\n9% in 11 months, he/she would</label>\r\n                          <select required onChange={(event) => {setbondInvest(event.target.value)}} value={bondInvest}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Sell all remaining investments</option>\r\n                            <option value=\"Unstable\">Sell a portion of remaining investments</option>\r\n                            <option value=\"Somewhat Stable\">Hold on to investments and sell nothing</option>\r\n                            <option value=\"Stable\" >Buy more of the investments</option>\r\n                          </select><br/>\r\n\r\n   <label>Before individual makes a decision on any investment, individual needs to\r\nconsider how individual feel about the prospect of potential loss of principal.\r\nThis is a basic principle of investing: the higher return you seek, the more risk you face.\r\nBased on the individual's feelings about risk and potential returns, his/her goal is to</label>\r\n                          <select required onChange={(event) => {setgoal(event.target.value)}} value={goal}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Potentially increase portfolio’s value as quickly as possible while accepting higher levels of risk or loss of principal</option>\r\n                            <option value=\"Unstable\">Potentially increase my portfolio’s value at a moderate pace while accepting moderate to high levels of risk or loss of principal</option>\r\n                            <option value=\"Somewhat Stable\">Get Income as a Primary concern, Capital Appreciation as Secondary</option>\r\n                            <option value=\"Stable\" >Secure the safety of my hard earned investment principal</option>\r\n                          </select><br/>\r\n\r\n   <label>How many years individual has been investing in Financial Markets?</label>\r\n                          <select required onChange={(event) => {setyearsInvested(event.target.value)}} value={yearsInvested}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Never Invested</option>\r\n                            <option value=\"Unstable\">one - seven years</option>\r\n                            <option value=\"Somewhat Stable\">eight - fifteen years</option>\r\n                            <option value=\"Stable\" >More than fifteen years</option>\r\n                          </select><br/>\r\n\r\n   <label>Assuming normal market conditions individual expects his/her portfolio to, overtime:</label>\r\n                          <select required onChange={(event) => {setovertime(event.target.value)}} value={overtime}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Outpace the market, have higher volatility</option>\r\n                            <option value=\"Unstable\">Generally keep pace with the market</option>\r\n                            <option value=\"Somewhat Stable\">have lower risk and lower returns</option>\r\n                            <option value=\"Stable\" >have a high degree of stability with modest returns</option>\r\n                          </select><br/>\r\n                        \r\n  <label>Individual would prefer investments that have yearly:</label>\r\n                          <select required onChange={(event) => {setyearlyExpect(event.target.value)}} value={yearlyExpect}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">virtually risk free rate of return of 4%</option>\r\n                            <option value=\"Unstable\">Potential gain of 6% and a potential loss of 2%</option>\r\n                            <option value=\"Somewhat Stable\">Potential gain of 8% and a potential loss of 4%</option>\r\n                            <option value=\"Stable\" >Potential gain of 12% and a potential loss of 8%</option>\r\n                            <option value=\"Stable\" >Potential gain of 20% and a potential loss of 15%</option>\r\n                          </select><br/>\r\n\r\n    <label>Individual believes that he/she can endure significant ups and downs\r\nin the market, because he is looking for as much long-term growth\r\nfor his investments as possible</label>\r\n                          <select required onChange={(event) => {setlongtermGrowth(event.target.value)}} value={longtermGrowth}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Strongly Agree</option>\r\n                            <option value=\"Unstable\">Agree</option>\r\n                            <option value=\"Somewhat Stable\">Neutral</option>\r\n                            <option value=\"Stable\" >Disagree</option>\r\n                            <option value=\"Stable\" >Strongly Disagree</option>\r\n                          </select><br/>\r\n\r\n<label>Using given five year illustration, choose   \r\nwhich scenario appeals to you the most: <br/> \r\n\r\n </label>\r\n\r\n                          <select required onChange={(event) => {setportfolio(event.target.value)}} value={portfolio}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Portfolio 1</option>\r\n                            <option value=\"Unstable\">Portfolio 2</option>\r\n                            <option value=\"Somewhat Stable\">Portfolio 3</option>\r\n                            <option value=\"Stable\" >Portfolio 4</option>\r\n                       \r\n                          </select><br/>\r\n\r\n<label>Prospects for future, in general\r\nhow do you describe your own outlook \r\nof the financial markets for the time periods listed\r\nFor Short term (0- 5 Years)</label>\r\n\r\n                          <select required onChange={(event) => {setoutlookLongterm(event.target.value)}} value={outlookLongterm}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Very Positive</option>\r\n                            <option value=\"Unstable\">Modestly Positive</option>\r\n                            <option value=\"Somewhat Stable\">Neutral</option>\r\n                            <option value=\"Stable\" >Very Negative</option>\r\n                            <option value=\"Stable\" >Unsure</option>\r\n                          </select><br/>\r\n\r\n<label>For Long term (more than 5 years)</label>\r\n\r\n                          <select required onChange={(event) => {setoutlookShorterm(event.target.value)}} value={outlookShorterm}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Very Positive</option>\r\n                            <option value=\"Unstable\">Modestly Positive</option>\r\n                            <option value=\"Somewhat Stable\">Neutral</option>\r\n                            <option value=\"Stable\" >Very Negative</option>\r\n                            <option value=\"Stable\" >Unsure</option>\r\n                          </select><br/>\r\n\r\n<label>What is your primary objective for this investment portfolio:</label>\r\n\r\n                          <select required onChange={(event) => {setobjective(event.target.value)}} value={objective}>\r\n                          <option value=\"\" defaultValue disabled hidden>Choose Here</option>\r\n                          <option value=\"Very Unstable\">Growth</option>\r\n                            <option value=\"Unstable\">To generate income</option>\r\n                            <option value=\"Somewhat Stable\">To accumulate assets for retirement</option>\r\n                            <option value=\"Stable\" >To assure the safety for principal</option>\r\n                      \r\n                          </select><br/>\r\n\r\n                          <button type=\"submit\">Submit</button>\r\n\r\n      </form>\r\n</div>\r\n<div id=\"logo\" className=\"loadingio-spinner-rolling-kswyn6f3gj7\"><div className=\"ldio-c9p079igqka\">\r\n<div></div>\r\n</div></div>      </>\r\n )}\r\n\t\t</>\r\n\r\n\t\t)\r\n};\r\n\r\nexport default Dashboard;","C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\AssestClassLow.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\PortfolioHigh.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\PortfolioLow.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\AssestClassHigh.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\AssestClassMedium.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Components\\Investment\\PortfolioMedium.js",[],"C:\\Users\\HP\\Desktop\\dcipl_new\\DCIPL\\src\\Pages\\features\\wealth.js",["108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":38},{"ruleId":"113","severity":1,"message":"117","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":80,"column":7,"nodeType":"115","messageId":"116","endLine":80,"endColumn":14},{"ruleId":"113","severity":1,"message":"119","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":16},{"ruleId":"113","severity":1,"message":"120","line":6,"column":18,"nodeType":"115","messageId":"116","endLine":6,"endColumn":29},{"ruleId":"113","severity":1,"message":"121","line":33,"column":25,"nodeType":"115","messageId":"116","endLine":33,"endColumn":43},{"ruleId":"113","severity":1,"message":"122","line":34,"column":21,"nodeType":"115","messageId":"116","endLine":34,"endColumn":35},{"ruleId":"113","severity":1,"message":"118","line":62,"column":7,"nodeType":"115","messageId":"116","endLine":62,"endColumn":14},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'Name' is assigned a value but never used.","'Profile' is assigned a value but never used.","'IsSignIn' is assigned a value but never used.","'setIsSignIn' is assigned a value but never used.","'setriskWillingness' is assigned a value but never used.","'setriskability' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]